//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.261.
// 
#pragma warning disable 1591

namespace AGIS.Integrations.Newsletter.LisTrak.LisTrak {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IntegrationServiceSoap", Namespace="http://webservices.listrak.com/v31/")]
    public partial class IntegrationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private WSUser wSUserValueField;
        
        private System.Threading.SendOrPostCallback ReportListConversationActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportListConversationDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationContactDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationContactRemovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationContactOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationContactReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationLinkClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationContactBounceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationLocationContactOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationLocationContactReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportConversationLocationContactClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemIDFromPublicIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback BulkLoadContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BulkLoadContactsWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSubscribedContactAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSubscribedContactAttributeWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLegacyProcessStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConductorBulkLoadAndTriggerContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConductorBulkLoadAndTriggerContactsWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConductorGetExternalEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConductorGetConversationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountVmtaCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactListCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGoogleTrackingDomainsToListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGoogleTrackingDomainsFromListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProfileHeaderCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProfileHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProfileHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfileHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProfileAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProfileAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfileAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeContactEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnsubscribeContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpamScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScheduleSendListMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScheduleSendListMessageWithProfileFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendListMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendListMessageWithProfileFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendListMessageTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendListMessageReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCharacterSetCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSavedMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSavedMessageTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSavedMessageCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilteredListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportSubscribedContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeSubscribedContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportAdminContactFeedbackLoopOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageContactOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeMessageContactOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageContactReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeMessageContactReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageContactClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeMessageContactClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageContactPassalongOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeMessageContactPassalongOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageContactBouncesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeMessageContactBouncesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportListMessageActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportListMessageDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportListContactRemovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeListContactRemovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportListContactHygieneOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeListContactHygieneOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageLinkClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportContactLinkClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageLocationClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageLocationOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageLocationReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageLocationContactClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageLocationContactOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageLocationContactReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageContactActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportRangeMessageContactRemovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportMessageContactRemovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportContactMessageActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportListImportHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportImportContactDetailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IntegrationService() {
            this.Url = global::AGIS.Integrations.Newsletter.LisTrak.Properties.Settings.Default.LisTrak_LisTrak_IntegrationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public WSUser WSUserValue {
            get {
                return this.wSUserValueField;
            }
            set {
                this.wSUserValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReportListConversationActivityCompletedEventHandler ReportListConversationActivityCompleted;
        
        /// <remarks/>
        public event ReportListConversationDeliveryCompletedEventHandler ReportListConversationDeliveryCompleted;
        
        /// <remarks/>
        public event ReportConversationContactDeliveryCompletedEventHandler ReportConversationContactDeliveryCompleted;
        
        /// <remarks/>
        public event ReportConversationContactRemovalCompletedEventHandler ReportConversationContactRemovalCompleted;
        
        /// <remarks/>
        public event ReportConversationContactOpenCompletedEventHandler ReportConversationContactOpenCompleted;
        
        /// <remarks/>
        public event ReportConversationContactReadCompletedEventHandler ReportConversationContactReadCompleted;
        
        /// <remarks/>
        public event ReportConversationLinkClickCompletedEventHandler ReportConversationLinkClickCompleted;
        
        /// <remarks/>
        public event ReportConversationContactBounceCompletedEventHandler ReportConversationContactBounceCompleted;
        
        /// <remarks/>
        public event ReportConversationLocationContactOpenCompletedEventHandler ReportConversationLocationContactOpenCompleted;
        
        /// <remarks/>
        public event ReportConversationLocationContactReadCompletedEventHandler ReportConversationLocationContactReadCompleted;
        
        /// <remarks/>
        public event ReportConversationLocationContactClickCompletedEventHandler ReportConversationLocationContactClickCompleted;
        
        /// <remarks/>
        public event GetSystemIDFromPublicIDCompletedEventHandler GetSystemIDFromPublicIDCompleted;
        
        /// <remarks/>
        public event BulkLoadContactsCompletedEventHandler BulkLoadContactsCompleted;
        
        /// <remarks/>
        public event BulkLoadContactsWithOptionsCompletedEventHandler BulkLoadContactsWithOptionsCompleted;
        
        /// <remarks/>
        public event UpdateSubscribedContactAttributeCompletedEventHandler UpdateSubscribedContactAttributeCompleted;
        
        /// <remarks/>
        public event UpdateSubscribedContactAttributeWithOptionsCompletedEventHandler UpdateSubscribedContactAttributeWithOptionsCompleted;
        
        /// <remarks/>
        public event GetProcessStatusCompletedEventHandler GetProcessStatusCompleted;
        
        /// <remarks/>
        public event GetMessageStatusCompletedEventHandler GetMessageStatusCompleted;
        
        /// <remarks/>
        public event GetLegacyProcessStatusCompletedEventHandler GetLegacyProcessStatusCompleted;
        
        /// <remarks/>
        public event ConductorBulkLoadAndTriggerContactsCompletedEventHandler ConductorBulkLoadAndTriggerContactsCompleted;
        
        /// <remarks/>
        public event ConductorBulkLoadAndTriggerContactsWithOptionsCompletedEventHandler ConductorBulkLoadAndTriggerContactsWithOptionsCompleted;
        
        /// <remarks/>
        public event ConductorGetExternalEventsCompletedEventHandler ConductorGetExternalEventsCompleted;
        
        /// <remarks/>
        public event ConductorGetConversationsCompletedEventHandler ConductorGetConversationsCompleted;
        
        /// <remarks/>
        public event GetAccountVmtaCollectionCompletedEventHandler GetAccountVmtaCollectionCompleted;
        
        /// <remarks/>
        public event GetContactListCompletedEventHandler GetContactListCompleted;
        
        /// <remarks/>
        public event GetContactListCollectionCompletedEventHandler GetContactListCollectionCompleted;
        
        /// <remarks/>
        public event CreateContactListCompletedEventHandler CreateContactListCompleted;
        
        /// <remarks/>
        public event UpdateContactListCompletedEventHandler UpdateContactListCompleted;
        
        /// <remarks/>
        public event CreateListCompletedEventHandler CreateListCompleted;
        
        /// <remarks/>
        public event AddGoogleTrackingDomainsToListCompletedEventHandler AddGoogleTrackingDomainsToListCompleted;
        
        /// <remarks/>
        public event DeleteGoogleTrackingDomainsFromListCompletedEventHandler DeleteGoogleTrackingDomainsFromListCompleted;
        
        /// <remarks/>
        public event DeleteContactListCompletedEventHandler DeleteContactListCompleted;
        
        /// <remarks/>
        public event GetProfileHeaderCollectionCompletedEventHandler GetProfileHeaderCollectionCompleted;
        
        /// <remarks/>
        public event CreateProfileHeaderCompletedEventHandler CreateProfileHeaderCompleted;
        
        /// <remarks/>
        public event UpdateProfileHeaderCompletedEventHandler UpdateProfileHeaderCompleted;
        
        /// <remarks/>
        public event DeleteProfileHeaderCompletedEventHandler DeleteProfileHeaderCompleted;
        
        /// <remarks/>
        public event CreateProfileAttributeCompletedEventHandler CreateProfileAttributeCompleted;
        
        /// <remarks/>
        public event UpdateProfileAttributeCompletedEventHandler UpdateProfileAttributeCompleted;
        
        /// <remarks/>
        public event DeleteProfileAttributeCompletedEventHandler DeleteProfileAttributeCompleted;
        
        /// <remarks/>
        public event GetContactCompletedEventHandler GetContactCompleted;
        
        /// <remarks/>
        public event SetContactCompletedEventHandler SetContactCompleted;
        
        /// <remarks/>
        public event ChangeContactEmailAddressCompletedEventHandler ChangeContactEmailAddressCompleted;
        
        /// <remarks/>
        public event SubscribeContactCompletedEventHandler SubscribeContactCompleted;
        
        /// <remarks/>
        public event UnsubscribeContactCompletedEventHandler UnsubscribeContactCompleted;
        
        /// <remarks/>
        public event GetSpamScoreCompletedEventHandler GetSpamScoreCompleted;
        
        /// <remarks/>
        public event ScheduleSendListMessageCompletedEventHandler ScheduleSendListMessageCompleted;
        
        /// <remarks/>
        public event ScheduleSendListMessageWithProfileFilterCompletedEventHandler ScheduleSendListMessageWithProfileFilterCompleted;
        
        /// <remarks/>
        public event SendListMessageCompletedEventHandler SendListMessageCompleted;
        
        /// <remarks/>
        public event SendListMessageWithProfileFilterCompletedEventHandler SendListMessageWithProfileFilterCompleted;
        
        /// <remarks/>
        public event SendListMessageTestCompletedEventHandler SendListMessageTestCompleted;
        
        /// <remarks/>
        public event SendListMessageReviewCompletedEventHandler SendListMessageReviewCompleted;
        
        /// <remarks/>
        public event GetCampaignCollectionCompletedEventHandler GetCampaignCollectionCompleted;
        
        /// <remarks/>
        public event GetCharacterSetCollectionCompletedEventHandler GetCharacterSetCollectionCompleted;
        
        /// <remarks/>
        public event SendSavedMessageCompletedEventHandler SendSavedMessageCompleted;
        
        /// <remarks/>
        public event SendSavedMessageTestCompletedEventHandler SendSavedMessageTestCompleted;
        
        /// <remarks/>
        public event GetSavedMessageCollectionCompletedEventHandler GetSavedMessageCollectionCompleted;
        
        /// <remarks/>
        public event GetFilteredListCountCompletedEventHandler GetFilteredListCountCompleted;
        
        /// <remarks/>
        public event ReportSubscribedContactsCompletedEventHandler ReportSubscribedContactsCompleted;
        
        /// <remarks/>
        public event ReportRangeSubscribedContactsCompletedEventHandler ReportRangeSubscribedContactsCompleted;
        
        /// <remarks/>
        public event ReportAdminContactFeedbackLoopCompletedEventHandler ReportAdminContactFeedbackLoopCompleted;
        
        /// <remarks/>
        public event ReportMessageContactOpenCompletedEventHandler ReportMessageContactOpenCompleted;
        
        /// <remarks/>
        public event ReportRangeMessageContactOpenCompletedEventHandler ReportRangeMessageContactOpenCompleted;
        
        /// <remarks/>
        public event ReportMessageContactReadCompletedEventHandler ReportMessageContactReadCompleted;
        
        /// <remarks/>
        public event ReportRangeMessageContactReadCompletedEventHandler ReportRangeMessageContactReadCompleted;
        
        /// <remarks/>
        public event ReportMessageContactClickCompletedEventHandler ReportMessageContactClickCompleted;
        
        /// <remarks/>
        public event ReportRangeMessageContactClickCompletedEventHandler ReportRangeMessageContactClickCompleted;
        
        /// <remarks/>
        public event ReportMessageContactPassalongCompletedEventHandler ReportMessageContactPassalongCompleted;
        
        /// <remarks/>
        public event ReportRangeMessageContactPassalongCompletedEventHandler ReportRangeMessageContactPassalongCompleted;
        
        /// <remarks/>
        public event ReportMessageContactBouncesCompletedEventHandler ReportMessageContactBouncesCompleted;
        
        /// <remarks/>
        public event ReportRangeMessageContactBouncesCompletedEventHandler ReportRangeMessageContactBouncesCompleted;
        
        /// <remarks/>
        public event ReportListMessageActivityCompletedEventHandler ReportListMessageActivityCompleted;
        
        /// <remarks/>
        public event ReportListMessageDeliveryCompletedEventHandler ReportListMessageDeliveryCompleted;
        
        /// <remarks/>
        public event ReportListContactRemovalCompletedEventHandler ReportListContactRemovalCompleted;
        
        /// <remarks/>
        public event ReportRangeListContactRemovalCompletedEventHandler ReportRangeListContactRemovalCompleted;
        
        /// <remarks/>
        public event ReportListContactHygieneCompletedEventHandler ReportListContactHygieneCompleted;
        
        /// <remarks/>
        public event ReportRangeListContactHygieneCompletedEventHandler ReportRangeListContactHygieneCompleted;
        
        /// <remarks/>
        public event ReportMessageLinkClickCompletedEventHandler ReportMessageLinkClickCompleted;
        
        /// <remarks/>
        public event ReportContactLinkClickCompletedEventHandler ReportContactLinkClickCompleted;
        
        /// <remarks/>
        public event ReportMessageLocationClickCompletedEventHandler ReportMessageLocationClickCompleted;
        
        /// <remarks/>
        public event ReportMessageLocationOpenCompletedEventHandler ReportMessageLocationOpenCompleted;
        
        /// <remarks/>
        public event ReportMessageLocationReadCompletedEventHandler ReportMessageLocationReadCompleted;
        
        /// <remarks/>
        public event ReportMessageLocationContactClickCompletedEventHandler ReportMessageLocationContactClickCompleted;
        
        /// <remarks/>
        public event ReportMessageLocationContactOpenCompletedEventHandler ReportMessageLocationContactOpenCompleted;
        
        /// <remarks/>
        public event ReportMessageLocationContactReadCompletedEventHandler ReportMessageLocationContactReadCompleted;
        
        /// <remarks/>
        public event ReportMessageContactActivityCompletedEventHandler ReportMessageContactActivityCompleted;
        
        /// <remarks/>
        public event ReportRangeMessageContactRemovalCompletedEventHandler ReportRangeMessageContactRemovalCompleted;
        
        /// <remarks/>
        public event ReportMessageContactRemovalCompletedEventHandler ReportMessageContactRemovalCompleted;
        
        /// <remarks/>
        public event ReportContactMessageActivityCompletedEventHandler ReportContactMessageActivityCompleted;
        
        /// <remarks/>
        public event ReportListImportHistoryCompletedEventHandler ReportListImportHistoryCompleted;
        
        /// <remarks/>
        public event ReportImportContactDetailCompletedEventHandler ReportImportContactDetailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportListConversationActivity", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationActivity[] ReportListConversationActivity(int ListID, bool IncludeTerminated, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportListConversationActivity", new object[] {
                        ListID,
                        IncludeTerminated,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationActivity[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportListConversationActivityAsync(int ListID, bool IncludeTerminated, WSException WSException) {
            this.ReportListConversationActivityAsync(ListID, IncludeTerminated, WSException, null);
        }
        
        /// <remarks/>
        public void ReportListConversationActivityAsync(int ListID, bool IncludeTerminated, WSException WSException, object userState) {
            if ((this.ReportListConversationActivityOperationCompleted == null)) {
                this.ReportListConversationActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportListConversationActivityOperationCompleted);
            }
            this.InvokeAsync("ReportListConversationActivity", new object[] {
                        ListID,
                        IncludeTerminated,
                        WSException}, this.ReportListConversationActivityOperationCompleted, userState);
        }
        
        private void OnReportListConversationActivityOperationCompleted(object arg) {
            if ((this.ReportListConversationActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportListConversationActivityCompleted(this, new ReportListConversationActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportListConversationDelivery", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationDelivery[] ReportListConversationDelivery(int ListID, bool IncludeTerminated, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportListConversationDelivery", new object[] {
                        ListID,
                        IncludeTerminated,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationDelivery[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportListConversationDeliveryAsync(int ListID, bool IncludeTerminated, WSException WSException) {
            this.ReportListConversationDeliveryAsync(ListID, IncludeTerminated, WSException, null);
        }
        
        /// <remarks/>
        public void ReportListConversationDeliveryAsync(int ListID, bool IncludeTerminated, WSException WSException, object userState) {
            if ((this.ReportListConversationDeliveryOperationCompleted == null)) {
                this.ReportListConversationDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportListConversationDeliveryOperationCompleted);
            }
            this.InvokeAsync("ReportListConversationDelivery", new object[] {
                        ListID,
                        IncludeTerminated,
                        WSException}, this.ReportListConversationDeliveryOperationCompleted, userState);
        }
        
        private void OnReportListConversationDeliveryOperationCompleted(object arg) {
            if ((this.ReportListConversationDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportListConversationDeliveryCompleted(this, new ReportListConversationDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationContactDelivery", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationContactDelivery[] ReportConversationContactDelivery(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationContactDelivery", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationContactDelivery[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationContactDeliveryAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException) {
            this.ReportConversationContactDeliveryAsync(ConversationID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationContactDeliveryAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException, object userState) {
            if ((this.ReportConversationContactDeliveryOperationCompleted == null)) {
                this.ReportConversationContactDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationContactDeliveryOperationCompleted);
            }
            this.InvokeAsync("ReportConversationContactDelivery", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportConversationContactDeliveryOperationCompleted, userState);
        }
        
        private void OnReportConversationContactDeliveryOperationCompleted(object arg) {
            if ((this.ReportConversationContactDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationContactDeliveryCompleted(this, new ReportConversationContactDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationContactRemoval", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationContactRemoval[] ReportConversationContactRemoval(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationContactRemoval", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationContactRemoval[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationContactRemovalAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException) {
            this.ReportConversationContactRemovalAsync(ConversationID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationContactRemovalAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException, object userState) {
            if ((this.ReportConversationContactRemovalOperationCompleted == null)) {
                this.ReportConversationContactRemovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationContactRemovalOperationCompleted);
            }
            this.InvokeAsync("ReportConversationContactRemoval", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportConversationContactRemovalOperationCompleted, userState);
        }
        
        private void OnReportConversationContactRemovalOperationCompleted(object arg) {
            if ((this.ReportConversationContactRemovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationContactRemovalCompleted(this, new ReportConversationContactRemovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationContactOpen", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationContactOpen[] ReportConversationContactOpen(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationContactOpen", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationContactOpen[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationContactOpenAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException) {
            this.ReportConversationContactOpenAsync(ConversationID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationContactOpenAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException, object userState) {
            if ((this.ReportConversationContactOpenOperationCompleted == null)) {
                this.ReportConversationContactOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationContactOpenOperationCompleted);
            }
            this.InvokeAsync("ReportConversationContactOpen", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportConversationContactOpenOperationCompleted, userState);
        }
        
        private void OnReportConversationContactOpenOperationCompleted(object arg) {
            if ((this.ReportConversationContactOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationContactOpenCompleted(this, new ReportConversationContactOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationContactRead", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationContactRead[] ReportConversationContactRead(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationContactRead", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationContactRead[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationContactReadAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException) {
            this.ReportConversationContactReadAsync(ConversationID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationContactReadAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException, object userState) {
            if ((this.ReportConversationContactReadOperationCompleted == null)) {
                this.ReportConversationContactReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationContactReadOperationCompleted);
            }
            this.InvokeAsync("ReportConversationContactRead", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportConversationContactReadOperationCompleted, userState);
        }
        
        private void OnReportConversationContactReadOperationCompleted(object arg) {
            if ((this.ReportConversationContactReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationContactReadCompleted(this, new ReportConversationContactReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationLinkClick", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationLinkClick[] ReportConversationLinkClick(int ConversationID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationLinkClick", new object[] {
                        ConversationID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationLinkClick[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationLinkClickAsync(int ConversationID, int Page, WSException WSException) {
            this.ReportConversationLinkClickAsync(ConversationID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationLinkClickAsync(int ConversationID, int Page, WSException WSException, object userState) {
            if ((this.ReportConversationLinkClickOperationCompleted == null)) {
                this.ReportConversationLinkClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationLinkClickOperationCompleted);
            }
            this.InvokeAsync("ReportConversationLinkClick", new object[] {
                        ConversationID,
                        Page,
                        WSException}, this.ReportConversationLinkClickOperationCompleted, userState);
        }
        
        private void OnReportConversationLinkClickOperationCompleted(object arg) {
            if ((this.ReportConversationLinkClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationLinkClickCompleted(this, new ReportConversationLinkClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationContactBounce", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationContactBounce[] ReportConversationContactBounce(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationContactBounce", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationContactBounce[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationContactBounceAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException) {
            this.ReportConversationContactBounceAsync(ConversationID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationContactBounceAsync(int ConversationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException, object userState) {
            if ((this.ReportConversationContactBounceOperationCompleted == null)) {
                this.ReportConversationContactBounceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationContactBounceOperationCompleted);
            }
            this.InvokeAsync("ReportConversationContactBounce", new object[] {
                        ConversationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportConversationContactBounceOperationCompleted, userState);
        }
        
        private void OnReportConversationContactBounceOperationCompleted(object arg) {
            if ((this.ReportConversationContactBounceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationContactBounceCompleted(this, new ReportConversationContactBounceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationLocationContactOpen", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationLocationContactOpen[] ReportConversationLocationContactOpen(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationLocationContactOpen", new object[] {
                        ConversationID,
                        GeoLocationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationLocationContactOpen[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationLocationContactOpenAsync(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException) {
            this.ReportConversationLocationContactOpenAsync(ConversationID, GeoLocationID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationLocationContactOpenAsync(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException, object userState) {
            if ((this.ReportConversationLocationContactOpenOperationCompleted == null)) {
                this.ReportConversationLocationContactOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationLocationContactOpenOperationCompleted);
            }
            this.InvokeAsync("ReportConversationLocationContactOpen", new object[] {
                        ConversationID,
                        GeoLocationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportConversationLocationContactOpenOperationCompleted, userState);
        }
        
        private void OnReportConversationLocationContactOpenOperationCompleted(object arg) {
            if ((this.ReportConversationLocationContactOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationLocationContactOpenCompleted(this, new ReportConversationLocationContactOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationLocationContactRead", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationLocationContactRead[] ReportConversationLocationContactRead(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationLocationContactRead", new object[] {
                        ConversationID,
                        GeoLocationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationLocationContactRead[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationLocationContactReadAsync(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException) {
            this.ReportConversationLocationContactReadAsync(ConversationID, GeoLocationID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationLocationContactReadAsync(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException, object userState) {
            if ((this.ReportConversationLocationContactReadOperationCompleted == null)) {
                this.ReportConversationLocationContactReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationLocationContactReadOperationCompleted);
            }
            this.InvokeAsync("ReportConversationLocationContactRead", new object[] {
                        ConversationID,
                        GeoLocationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportConversationLocationContactReadOperationCompleted, userState);
        }
        
        private void OnReportConversationLocationContactReadOperationCompleted(object arg) {
            if ((this.ReportConversationLocationContactReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationLocationContactReadCompleted(this, new ReportConversationLocationContactReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportConversationLocationContactClick", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConversationLocationContactClick[] ReportConversationLocationContactClick(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportConversationLocationContactClick", new object[] {
                        ConversationID,
                        GeoLocationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSConversationLocationContactClick[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportConversationLocationContactClickAsync(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException) {
            this.ReportConversationLocationContactClickAsync(ConversationID, GeoLocationID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportConversationLocationContactClickAsync(int ConversationID, int GeoLocationID, int Page, System.DateTime StartDate, System.DateTime EndDate, WSException WSException, object userState) {
            if ((this.ReportConversationLocationContactClickOperationCompleted == null)) {
                this.ReportConversationLocationContactClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportConversationLocationContactClickOperationCompleted);
            }
            this.InvokeAsync("ReportConversationLocationContactClick", new object[] {
                        ConversationID,
                        GeoLocationID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportConversationLocationContactClickOperationCompleted, userState);
        }
        
        private void OnReportConversationLocationContactClickOperationCompleted(object arg) {
            if ((this.ReportConversationLocationContactClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportConversationLocationContactClickCompleted(this, new ReportConversationLocationContactClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetSystemIDFromPublicID", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSystemIDFromPublicID(string PublicID, WSObjectTypeEnum ObjectType) {
            object[] results = this.Invoke("GetSystemIDFromPublicID", new object[] {
                        PublicID,
                        ObjectType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemIDFromPublicIDAsync(string PublicID, WSObjectTypeEnum ObjectType) {
            this.GetSystemIDFromPublicIDAsync(PublicID, ObjectType, null);
        }
        
        /// <remarks/>
        public void GetSystemIDFromPublicIDAsync(string PublicID, WSObjectTypeEnum ObjectType, object userState) {
            if ((this.GetSystemIDFromPublicIDOperationCompleted == null)) {
                this.GetSystemIDFromPublicIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemIDFromPublicIDOperationCompleted);
            }
            this.InvokeAsync("GetSystemIDFromPublicID", new object[] {
                        PublicID,
                        ObjectType}, this.GetSystemIDFromPublicIDOperationCompleted, userState);
        }
        
        private void OnGetSystemIDFromPublicIDOperationCompleted(object arg) {
            if ((this.GetSystemIDFromPublicIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemIDFromPublicIDCompleted(this, new GetSystemIDFromPublicIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/BulkLoadContacts", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BulkLoadContacts(int ListID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSImportDirectives WSImportDirectives, WSFileMappings[] fileMappings, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImportFileStream) {
            object[] results = this.Invoke("BulkLoadContacts", new object[] {
                        ListID,
                        WSImportDirectives,
                        fileMappings,
                        ImportFileStream});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BulkLoadContactsAsync(int ListID, WSImportDirectives WSImportDirectives, WSFileMappings[] fileMappings, byte[] ImportFileStream) {
            this.BulkLoadContactsAsync(ListID, WSImportDirectives, fileMappings, ImportFileStream, null);
        }
        
        /// <remarks/>
        public void BulkLoadContactsAsync(int ListID, WSImportDirectives WSImportDirectives, WSFileMappings[] fileMappings, byte[] ImportFileStream, object userState) {
            if ((this.BulkLoadContactsOperationCompleted == null)) {
                this.BulkLoadContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBulkLoadContactsOperationCompleted);
            }
            this.InvokeAsync("BulkLoadContacts", new object[] {
                        ListID,
                        WSImportDirectives,
                        fileMappings,
                        ImportFileStream}, this.BulkLoadContactsOperationCompleted, userState);
        }
        
        private void OnBulkLoadContactsOperationCompleted(object arg) {
            if ((this.BulkLoadContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BulkLoadContactsCompleted(this, new BulkLoadContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/BulkLoadContactsWithOptions", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BulkLoadContactsWithOptions(int ListID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSImportDirectives WSImportDirectives, WSFileMappings[] fileMappings, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImportFileStream, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSBulkLoadOptions WSBulkLoadOptions) {
            object[] results = this.Invoke("BulkLoadContactsWithOptions", new object[] {
                        ListID,
                        WSImportDirectives,
                        fileMappings,
                        ImportFileStream,
                        WSBulkLoadOptions});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BulkLoadContactsWithOptionsAsync(int ListID, WSImportDirectives WSImportDirectives, WSFileMappings[] fileMappings, byte[] ImportFileStream, WSBulkLoadOptions WSBulkLoadOptions) {
            this.BulkLoadContactsWithOptionsAsync(ListID, WSImportDirectives, fileMappings, ImportFileStream, WSBulkLoadOptions, null);
        }
        
        /// <remarks/>
        public void BulkLoadContactsWithOptionsAsync(int ListID, WSImportDirectives WSImportDirectives, WSFileMappings[] fileMappings, byte[] ImportFileStream, WSBulkLoadOptions WSBulkLoadOptions, object userState) {
            if ((this.BulkLoadContactsWithOptionsOperationCompleted == null)) {
                this.BulkLoadContactsWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBulkLoadContactsWithOptionsOperationCompleted);
            }
            this.InvokeAsync("BulkLoadContactsWithOptions", new object[] {
                        ListID,
                        WSImportDirectives,
                        fileMappings,
                        ImportFileStream,
                        WSBulkLoadOptions}, this.BulkLoadContactsWithOptionsOperationCompleted, userState);
        }
        
        private void OnBulkLoadContactsWithOptionsOperationCompleted(object arg) {
            if ((this.BulkLoadContactsWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BulkLoadContactsWithOptionsCompleted(this, new BulkLoadContactsWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/UpdateSubscribedContactAttribute", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSubscribedContactAttribute(int AttributeID, string Value) {
            object[] results = this.Invoke("UpdateSubscribedContactAttribute", new object[] {
                        AttributeID,
                        Value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSubscribedContactAttributeAsync(int AttributeID, string Value) {
            this.UpdateSubscribedContactAttributeAsync(AttributeID, Value, null);
        }
        
        /// <remarks/>
        public void UpdateSubscribedContactAttributeAsync(int AttributeID, string Value, object userState) {
            if ((this.UpdateSubscribedContactAttributeOperationCompleted == null)) {
                this.UpdateSubscribedContactAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSubscribedContactAttributeOperationCompleted);
            }
            this.InvokeAsync("UpdateSubscribedContactAttribute", new object[] {
                        AttributeID,
                        Value}, this.UpdateSubscribedContactAttributeOperationCompleted, userState);
        }
        
        private void OnUpdateSubscribedContactAttributeOperationCompleted(object arg) {
            if ((this.UpdateSubscribedContactAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSubscribedContactAttributeCompleted(this, new UpdateSubscribedContactAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/UpdateSubscribedContactAttributeWithOptions", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSubscribedContactAttributeWithOptions(int AttributeID, string Value, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSUpdateSubcribedContactAttributeOptions WSUpdateSubcribedContactAttributeOptions) {
            object[] results = this.Invoke("UpdateSubscribedContactAttributeWithOptions", new object[] {
                        AttributeID,
                        Value,
                        WSUpdateSubcribedContactAttributeOptions});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSubscribedContactAttributeWithOptionsAsync(int AttributeID, string Value, WSUpdateSubcribedContactAttributeOptions WSUpdateSubcribedContactAttributeOptions) {
            this.UpdateSubscribedContactAttributeWithOptionsAsync(AttributeID, Value, WSUpdateSubcribedContactAttributeOptions, null);
        }
        
        /// <remarks/>
        public void UpdateSubscribedContactAttributeWithOptionsAsync(int AttributeID, string Value, WSUpdateSubcribedContactAttributeOptions WSUpdateSubcribedContactAttributeOptions, object userState) {
            if ((this.UpdateSubscribedContactAttributeWithOptionsOperationCompleted == null)) {
                this.UpdateSubscribedContactAttributeWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSubscribedContactAttributeWithOptionsOperationCompleted);
            }
            this.InvokeAsync("UpdateSubscribedContactAttributeWithOptions", new object[] {
                        AttributeID,
                        Value,
                        WSUpdateSubcribedContactAttributeOptions}, this.UpdateSubscribedContactAttributeWithOptionsOperationCompleted, userState);
        }
        
        private void OnUpdateSubscribedContactAttributeWithOptionsOperationCompleted(object arg) {
            if ((this.UpdateSubscribedContactAttributeWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSubscribedContactAttributeWithOptionsCompleted(this, new UpdateSubscribedContactAttributeWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetProcessStatus", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WSProcessStatus", IsNullable=true)]
        public WSProcessStatus GetProcessStatus(int ProcessID) {
            object[] results = this.Invoke("GetProcessStatus", new object[] {
                        ProcessID});
            return ((WSProcessStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessStatusAsync(int ProcessID) {
            this.GetProcessStatusAsync(ProcessID, null);
        }
        
        /// <remarks/>
        public void GetProcessStatusAsync(int ProcessID, object userState) {
            if ((this.GetProcessStatusOperationCompleted == null)) {
                this.GetProcessStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessStatusOperationCompleted);
            }
            this.InvokeAsync("GetProcessStatus", new object[] {
                        ProcessID}, this.GetProcessStatusOperationCompleted, userState);
        }
        
        private void OnGetProcessStatusOperationCompleted(object arg) {
            if ((this.GetProcessStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessStatusCompleted(this, new GetProcessStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetMessageStatus", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WSMessageStatus", IsNullable=true)]
        public WSMessageStatus GetMessageStatus(int MsgID) {
            object[] results = this.Invoke("GetMessageStatus", new object[] {
                        MsgID});
            return ((WSMessageStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageStatusAsync(int MsgID) {
            this.GetMessageStatusAsync(MsgID, null);
        }
        
        /// <remarks/>
        public void GetMessageStatusAsync(int MsgID, object userState) {
            if ((this.GetMessageStatusOperationCompleted == null)) {
                this.GetMessageStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageStatusOperationCompleted);
            }
            this.InvokeAsync("GetMessageStatus", new object[] {
                        MsgID}, this.GetMessageStatusOperationCompleted, userState);
        }
        
        private void OnGetMessageStatusOperationCompleted(object arg) {
            if ((this.GetMessageStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageStatusCompleted(this, new GetMessageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetLegacyProcessStatus", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSLegacyProcessStatus[] GetLegacyProcessStatus(int ListID) {
            object[] results = this.Invoke("GetLegacyProcessStatus", new object[] {
                        ListID});
            return ((WSLegacyProcessStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLegacyProcessStatusAsync(int ListID) {
            this.GetLegacyProcessStatusAsync(ListID, null);
        }
        
        /// <remarks/>
        public void GetLegacyProcessStatusAsync(int ListID, object userState) {
            if ((this.GetLegacyProcessStatusOperationCompleted == null)) {
                this.GetLegacyProcessStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLegacyProcessStatusOperationCompleted);
            }
            this.InvokeAsync("GetLegacyProcessStatus", new object[] {
                        ListID}, this.GetLegacyProcessStatusOperationCompleted, userState);
        }
        
        private void OnGetLegacyProcessStatusOperationCompleted(object arg) {
            if ((this.GetLegacyProcessStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLegacyProcessStatusCompleted(this, new GetLegacyProcessStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ConductorBulkLoadAndTriggerContacts", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ConductorBulkLoadAndTriggerContacts(int ListID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSImportDirectives WSImportDirectives, WSTriggerFileMappings[] TriggerFileMappings, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImportFileStream) {
            object[] results = this.Invoke("ConductorBulkLoadAndTriggerContacts", new object[] {
                        ListID,
                        WSImportDirectives,
                        TriggerFileMappings,
                        ImportFileStream});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ConductorBulkLoadAndTriggerContactsAsync(int ListID, WSImportDirectives WSImportDirectives, WSTriggerFileMappings[] TriggerFileMappings, byte[] ImportFileStream) {
            this.ConductorBulkLoadAndTriggerContactsAsync(ListID, WSImportDirectives, TriggerFileMappings, ImportFileStream, null);
        }
        
        /// <remarks/>
        public void ConductorBulkLoadAndTriggerContactsAsync(int ListID, WSImportDirectives WSImportDirectives, WSTriggerFileMappings[] TriggerFileMappings, byte[] ImportFileStream, object userState) {
            if ((this.ConductorBulkLoadAndTriggerContactsOperationCompleted == null)) {
                this.ConductorBulkLoadAndTriggerContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConductorBulkLoadAndTriggerContactsOperationCompleted);
            }
            this.InvokeAsync("ConductorBulkLoadAndTriggerContacts", new object[] {
                        ListID,
                        WSImportDirectives,
                        TriggerFileMappings,
                        ImportFileStream}, this.ConductorBulkLoadAndTriggerContactsOperationCompleted, userState);
        }
        
        private void OnConductorBulkLoadAndTriggerContactsOperationCompleted(object arg) {
            if ((this.ConductorBulkLoadAndTriggerContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConductorBulkLoadAndTriggerContactsCompleted(this, new ConductorBulkLoadAndTriggerContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ConductorBulkLoadAndTriggerContactsWithOptions" +
            "", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ConductorBulkLoadAndTriggerContactsWithOptions(int ListID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSImportDirectives WSImportDirectives, WSTriggerFileMappings[] TriggerFileMappings, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImportFileStream, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSConductorBulkLoadOptions WSConductorBulkLoadOptions) {
            object[] results = this.Invoke("ConductorBulkLoadAndTriggerContactsWithOptions", new object[] {
                        ListID,
                        WSImportDirectives,
                        TriggerFileMappings,
                        ImportFileStream,
                        WSConductorBulkLoadOptions});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ConductorBulkLoadAndTriggerContactsWithOptionsAsync(int ListID, WSImportDirectives WSImportDirectives, WSTriggerFileMappings[] TriggerFileMappings, byte[] ImportFileStream, WSConductorBulkLoadOptions WSConductorBulkLoadOptions) {
            this.ConductorBulkLoadAndTriggerContactsWithOptionsAsync(ListID, WSImportDirectives, TriggerFileMappings, ImportFileStream, WSConductorBulkLoadOptions, null);
        }
        
        /// <remarks/>
        public void ConductorBulkLoadAndTriggerContactsWithOptionsAsync(int ListID, WSImportDirectives WSImportDirectives, WSTriggerFileMappings[] TriggerFileMappings, byte[] ImportFileStream, WSConductorBulkLoadOptions WSConductorBulkLoadOptions, object userState) {
            if ((this.ConductorBulkLoadAndTriggerContactsWithOptionsOperationCompleted == null)) {
                this.ConductorBulkLoadAndTriggerContactsWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConductorBulkLoadAndTriggerContactsWithOptionsOperationCompleted);
            }
            this.InvokeAsync("ConductorBulkLoadAndTriggerContactsWithOptions", new object[] {
                        ListID,
                        WSImportDirectives,
                        TriggerFileMappings,
                        ImportFileStream,
                        WSConductorBulkLoadOptions}, this.ConductorBulkLoadAndTriggerContactsWithOptionsOperationCompleted, userState);
        }
        
        private void OnConductorBulkLoadAndTriggerContactsWithOptionsOperationCompleted(object arg) {
            if ((this.ConductorBulkLoadAndTriggerContactsWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConductorBulkLoadAndTriggerContactsWithOptionsCompleted(this, new ConductorBulkLoadAndTriggerContactsWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ConductorGetExternalEvents", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConductorExternalEvent[] ConductorGetExternalEvents(int ListID) {
            object[] results = this.Invoke("ConductorGetExternalEvents", new object[] {
                        ListID});
            return ((WSConductorExternalEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void ConductorGetExternalEventsAsync(int ListID) {
            this.ConductorGetExternalEventsAsync(ListID, null);
        }
        
        /// <remarks/>
        public void ConductorGetExternalEventsAsync(int ListID, object userState) {
            if ((this.ConductorGetExternalEventsOperationCompleted == null)) {
                this.ConductorGetExternalEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConductorGetExternalEventsOperationCompleted);
            }
            this.InvokeAsync("ConductorGetExternalEvents", new object[] {
                        ListID}, this.ConductorGetExternalEventsOperationCompleted, userState);
        }
        
        private void OnConductorGetExternalEventsOperationCompleted(object arg) {
            if ((this.ConductorGetExternalEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConductorGetExternalEventsCompleted(this, new ConductorGetExternalEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ConductorGetConversations", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSConductorConversation[] ConductorGetConversations(int listID) {
            object[] results = this.Invoke("ConductorGetConversations", new object[] {
                        listID});
            return ((WSConductorConversation[])(results[0]));
        }
        
        /// <remarks/>
        public void ConductorGetConversationsAsync(int listID) {
            this.ConductorGetConversationsAsync(listID, null);
        }
        
        /// <remarks/>
        public void ConductorGetConversationsAsync(int listID, object userState) {
            if ((this.ConductorGetConversationsOperationCompleted == null)) {
                this.ConductorGetConversationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConductorGetConversationsOperationCompleted);
            }
            this.InvokeAsync("ConductorGetConversations", new object[] {
                        listID}, this.ConductorGetConversationsOperationCompleted, userState);
        }
        
        private void OnConductorGetConversationsOperationCompleted(object arg) {
            if ((this.ConductorGetConversationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConductorGetConversationsCompleted(this, new ConductorGetConversationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetAccountVmtaCollection", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSVmta[] GetAccountVmtaCollection([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("GetAccountVmtaCollection", new object[] {
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSVmta[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountVmtaCollectionAsync(WSException WSException) {
            this.GetAccountVmtaCollectionAsync(WSException, null);
        }
        
        /// <remarks/>
        public void GetAccountVmtaCollectionAsync(WSException WSException, object userState) {
            if ((this.GetAccountVmtaCollectionOperationCompleted == null)) {
                this.GetAccountVmtaCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountVmtaCollectionOperationCompleted);
            }
            this.InvokeAsync("GetAccountVmtaCollection", new object[] {
                        WSException}, this.GetAccountVmtaCollectionOperationCompleted, userState);
        }
        
        private void OnGetAccountVmtaCollectionOperationCompleted(object arg) {
            if ((this.GetAccountVmtaCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountVmtaCollectionCompleted(this, new GetAccountVmtaCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetContactList", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WSContactList", IsNullable=true)]
        public WSContactList GetContactList(int ListID) {
            object[] results = this.Invoke("GetContactList", new object[] {
                        ListID});
            return ((WSContactList)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactListAsync(int ListID) {
            this.GetContactListAsync(ListID, null);
        }
        
        /// <remarks/>
        public void GetContactListAsync(int ListID, object userState) {
            if ((this.GetContactListOperationCompleted == null)) {
                this.GetContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactListOperationCompleted);
            }
            this.InvokeAsync("GetContactList", new object[] {
                        ListID}, this.GetContactListOperationCompleted, userState);
        }
        
        private void OnGetContactListOperationCompleted(object arg) {
            if ((this.GetContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactListCompleted(this, new GetContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetContactListCollection", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactList[] GetContactListCollection() {
            object[] results = this.Invoke("GetContactListCollection", new object[0]);
            return ((WSContactList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContactListCollectionAsync() {
            this.GetContactListCollectionAsync(null);
        }
        
        /// <remarks/>
        public void GetContactListCollectionAsync(object userState) {
            if ((this.GetContactListCollectionOperationCompleted == null)) {
                this.GetContactListCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactListCollectionOperationCompleted);
            }
            this.InvokeAsync("GetContactListCollection", new object[0], this.GetContactListCollectionOperationCompleted, userState);
        }
        
        private void OnGetContactListCollectionOperationCompleted(object arg) {
            if ((this.GetContactListCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactListCollectionCompleted(this, new GetContactListCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/CreateContactList", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WSContactList", IsNullable=true)]
        public WSContactList CreateContactList(
                    string ListName, 
                    string FromName, 
                    string FromEmail, 
                    bool EnableRemovalLink, 
                    bool EnableBrowserLink, 
                    int BounceHandling, 
                    bool EnableDoubleOptin, 
                    bool EnableListHygiene, 
                    int VmtaID, 
                    bool ShowEmailList, 
                    bool ShowAdvancedPersonalization, 
                    int BounceUnsubscribeCount, 
                    string DomainAliasEmail, 
                    string DomainAliasLink, 
                    bool EnableRSS, 
                    bool EnableGoogleAnalytics, 
                    string[] GoogleTrackingDomains, 
                    bool EnableInternationalization, 
                    bool EnableDynamicContent, 
                    bool EnableListRemoveHeader) {
            object[] results = this.Invoke("CreateContactList", new object[] {
                        ListName,
                        FromName,
                        FromEmail,
                        EnableRemovalLink,
                        EnableBrowserLink,
                        BounceHandling,
                        EnableDoubleOptin,
                        EnableListHygiene,
                        VmtaID,
                        ShowEmailList,
                        ShowAdvancedPersonalization,
                        BounceUnsubscribeCount,
                        DomainAliasEmail,
                        DomainAliasLink,
                        EnableRSS,
                        EnableGoogleAnalytics,
                        GoogleTrackingDomains,
                        EnableInternationalization,
                        EnableDynamicContent,
                        EnableListRemoveHeader});
            return ((WSContactList)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContactListAsync(
                    string ListName, 
                    string FromName, 
                    string FromEmail, 
                    bool EnableRemovalLink, 
                    bool EnableBrowserLink, 
                    int BounceHandling, 
                    bool EnableDoubleOptin, 
                    bool EnableListHygiene, 
                    int VmtaID, 
                    bool ShowEmailList, 
                    bool ShowAdvancedPersonalization, 
                    int BounceUnsubscribeCount, 
                    string DomainAliasEmail, 
                    string DomainAliasLink, 
                    bool EnableRSS, 
                    bool EnableGoogleAnalytics, 
                    string[] GoogleTrackingDomains, 
                    bool EnableInternationalization, 
                    bool EnableDynamicContent, 
                    bool EnableListRemoveHeader) {
            this.CreateContactListAsync(ListName, FromName, FromEmail, EnableRemovalLink, EnableBrowserLink, BounceHandling, EnableDoubleOptin, EnableListHygiene, VmtaID, ShowEmailList, ShowAdvancedPersonalization, BounceUnsubscribeCount, DomainAliasEmail, DomainAliasLink, EnableRSS, EnableGoogleAnalytics, GoogleTrackingDomains, EnableInternationalization, EnableDynamicContent, EnableListRemoveHeader, null);
        }
        
        /// <remarks/>
        public void CreateContactListAsync(
                    string ListName, 
                    string FromName, 
                    string FromEmail, 
                    bool EnableRemovalLink, 
                    bool EnableBrowserLink, 
                    int BounceHandling, 
                    bool EnableDoubleOptin, 
                    bool EnableListHygiene, 
                    int VmtaID, 
                    bool ShowEmailList, 
                    bool ShowAdvancedPersonalization, 
                    int BounceUnsubscribeCount, 
                    string DomainAliasEmail, 
                    string DomainAliasLink, 
                    bool EnableRSS, 
                    bool EnableGoogleAnalytics, 
                    string[] GoogleTrackingDomains, 
                    bool EnableInternationalization, 
                    bool EnableDynamicContent, 
                    bool EnableListRemoveHeader, 
                    object userState) {
            if ((this.CreateContactListOperationCompleted == null)) {
                this.CreateContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContactListOperationCompleted);
            }
            this.InvokeAsync("CreateContactList", new object[] {
                        ListName,
                        FromName,
                        FromEmail,
                        EnableRemovalLink,
                        EnableBrowserLink,
                        BounceHandling,
                        EnableDoubleOptin,
                        EnableListHygiene,
                        VmtaID,
                        ShowEmailList,
                        ShowAdvancedPersonalization,
                        BounceUnsubscribeCount,
                        DomainAliasEmail,
                        DomainAliasLink,
                        EnableRSS,
                        EnableGoogleAnalytics,
                        GoogleTrackingDomains,
                        EnableInternationalization,
                        EnableDynamicContent,
                        EnableListRemoveHeader}, this.CreateContactListOperationCompleted, userState);
        }
        
        private void OnCreateContactListOperationCompleted(object arg) {
            if ((this.CreateContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContactListCompleted(this, new CreateContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/UpdateContactList", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateContactList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSUpdateContactList WSUpdateContactList) {
            object[] results = this.Invoke("UpdateContactList", new object[] {
                        WSUpdateContactList});
            WSUpdateContactList = ((WSUpdateContactList)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContactListAsync(WSUpdateContactList WSUpdateContactList) {
            this.UpdateContactListAsync(WSUpdateContactList, null);
        }
        
        /// <remarks/>
        public void UpdateContactListAsync(WSUpdateContactList WSUpdateContactList, object userState) {
            if ((this.UpdateContactListOperationCompleted == null)) {
                this.UpdateContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContactListOperationCompleted);
            }
            this.InvokeAsync("UpdateContactList", new object[] {
                        WSUpdateContactList}, this.UpdateContactListOperationCompleted, userState);
        }
        
        private void OnUpdateContactListOperationCompleted(object arg) {
            if ((this.UpdateContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContactListCompleted(this, new UpdateContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/CreateList", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSList WSList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("CreateList", new object[] {
                        WSList,
                        WSException});
            WSList = ((WSList)(results[1]));
            WSException = ((WSException)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateListAsync(WSList WSList, WSException WSException) {
            this.CreateListAsync(WSList, WSException, null);
        }
        
        /// <remarks/>
        public void CreateListAsync(WSList WSList, WSException WSException, object userState) {
            if ((this.CreateListOperationCompleted == null)) {
                this.CreateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateListOperationCompleted);
            }
            this.InvokeAsync("CreateList", new object[] {
                        WSList,
                        WSException}, this.CreateListOperationCompleted, userState);
        }
        
        private void OnCreateListOperationCompleted(object arg) {
            if ((this.CreateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateListCompleted(this, new CreateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/AddGoogleTrackingDomainsToList", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddGoogleTrackingDomainsToList(int ListID, string[] GoogleTrackingDomains) {
            object[] results = this.Invoke("AddGoogleTrackingDomainsToList", new object[] {
                        ListID,
                        GoogleTrackingDomains});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddGoogleTrackingDomainsToListAsync(int ListID, string[] GoogleTrackingDomains) {
            this.AddGoogleTrackingDomainsToListAsync(ListID, GoogleTrackingDomains, null);
        }
        
        /// <remarks/>
        public void AddGoogleTrackingDomainsToListAsync(int ListID, string[] GoogleTrackingDomains, object userState) {
            if ((this.AddGoogleTrackingDomainsToListOperationCompleted == null)) {
                this.AddGoogleTrackingDomainsToListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGoogleTrackingDomainsToListOperationCompleted);
            }
            this.InvokeAsync("AddGoogleTrackingDomainsToList", new object[] {
                        ListID,
                        GoogleTrackingDomains}, this.AddGoogleTrackingDomainsToListOperationCompleted, userState);
        }
        
        private void OnAddGoogleTrackingDomainsToListOperationCompleted(object arg) {
            if ((this.AddGoogleTrackingDomainsToListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGoogleTrackingDomainsToListCompleted(this, new AddGoogleTrackingDomainsToListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/DeleteGoogleTrackingDomainsFromList", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteGoogleTrackingDomainsFromList(int ListID, string[] GoogleTrackingDomains) {
            object[] results = this.Invoke("DeleteGoogleTrackingDomainsFromList", new object[] {
                        ListID,
                        GoogleTrackingDomains});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGoogleTrackingDomainsFromListAsync(int ListID, string[] GoogleTrackingDomains) {
            this.DeleteGoogleTrackingDomainsFromListAsync(ListID, GoogleTrackingDomains, null);
        }
        
        /// <remarks/>
        public void DeleteGoogleTrackingDomainsFromListAsync(int ListID, string[] GoogleTrackingDomains, object userState) {
            if ((this.DeleteGoogleTrackingDomainsFromListOperationCompleted == null)) {
                this.DeleteGoogleTrackingDomainsFromListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGoogleTrackingDomainsFromListOperationCompleted);
            }
            this.InvokeAsync("DeleteGoogleTrackingDomainsFromList", new object[] {
                        ListID,
                        GoogleTrackingDomains}, this.DeleteGoogleTrackingDomainsFromListOperationCompleted, userState);
        }
        
        private void OnDeleteGoogleTrackingDomainsFromListOperationCompleted(object arg) {
            if ((this.DeleteGoogleTrackingDomainsFromListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGoogleTrackingDomainsFromListCompleted(this, new DeleteGoogleTrackingDomainsFromListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/DeleteContactList", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteContactList(int ListID) {
            object[] results = this.Invoke("DeleteContactList", new object[] {
                        ListID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContactListAsync(int ListID) {
            this.DeleteContactListAsync(ListID, null);
        }
        
        /// <remarks/>
        public void DeleteContactListAsync(int ListID, object userState) {
            if ((this.DeleteContactListOperationCompleted == null)) {
                this.DeleteContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContactListOperationCompleted);
            }
            this.InvokeAsync("DeleteContactList", new object[] {
                        ListID}, this.DeleteContactListOperationCompleted, userState);
        }
        
        private void OnDeleteContactListOperationCompleted(object arg) {
            if ((this.DeleteContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContactListCompleted(this, new DeleteContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetProfileHeaderCollection", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSProfileHeader[] GetProfileHeaderCollection(int ListID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("GetProfileHeaderCollection", new object[] {
                        ListID,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSProfileHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProfileHeaderCollectionAsync(int ListID, WSException WSException) {
            this.GetProfileHeaderCollectionAsync(ListID, WSException, null);
        }
        
        /// <remarks/>
        public void GetProfileHeaderCollectionAsync(int ListID, WSException WSException, object userState) {
            if ((this.GetProfileHeaderCollectionOperationCompleted == null)) {
                this.GetProfileHeaderCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProfileHeaderCollectionOperationCompleted);
            }
            this.InvokeAsync("GetProfileHeaderCollection", new object[] {
                        ListID,
                        WSException}, this.GetProfileHeaderCollectionOperationCompleted, userState);
        }
        
        private void OnGetProfileHeaderCollectionOperationCompleted(object arg) {
            if ((this.GetProfileHeaderCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProfileHeaderCollectionCompleted(this, new GetProfileHeaderCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/CreateProfileHeader", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateProfileHeader([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSProfileHeader WSProfileHeader, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("CreateProfileHeader", new object[] {
                        WSProfileHeader,
                        WSException});
            WSProfileHeader = ((WSProfileHeader)(results[1]));
            WSException = ((WSException)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProfileHeaderAsync(WSProfileHeader WSProfileHeader, WSException WSException) {
            this.CreateProfileHeaderAsync(WSProfileHeader, WSException, null);
        }
        
        /// <remarks/>
        public void CreateProfileHeaderAsync(WSProfileHeader WSProfileHeader, WSException WSException, object userState) {
            if ((this.CreateProfileHeaderOperationCompleted == null)) {
                this.CreateProfileHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProfileHeaderOperationCompleted);
            }
            this.InvokeAsync("CreateProfileHeader", new object[] {
                        WSProfileHeader,
                        WSException}, this.CreateProfileHeaderOperationCompleted, userState);
        }
        
        private void OnCreateProfileHeaderOperationCompleted(object arg) {
            if ((this.CreateProfileHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProfileHeaderCompleted(this, new CreateProfileHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/UpdateProfileHeader", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProfileHeader([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSProfileHeader WSProfileHeader, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("UpdateProfileHeader", new object[] {
                        WSProfileHeader,
                        WSException});
            WSProfileHeader = ((WSProfileHeader)(results[1]));
            WSException = ((WSException)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProfileHeaderAsync(WSProfileHeader WSProfileHeader, WSException WSException) {
            this.UpdateProfileHeaderAsync(WSProfileHeader, WSException, null);
        }
        
        /// <remarks/>
        public void UpdateProfileHeaderAsync(WSProfileHeader WSProfileHeader, WSException WSException, object userState) {
            if ((this.UpdateProfileHeaderOperationCompleted == null)) {
                this.UpdateProfileHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProfileHeaderOperationCompleted);
            }
            this.InvokeAsync("UpdateProfileHeader", new object[] {
                        WSProfileHeader,
                        WSException}, this.UpdateProfileHeaderOperationCompleted, userState);
        }
        
        private void OnUpdateProfileHeaderOperationCompleted(object arg) {
            if ((this.UpdateProfileHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProfileHeaderCompleted(this, new UpdateProfileHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/DeleteProfileHeader", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProfileHeader(int HeaderID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("DeleteProfileHeader", new object[] {
                        HeaderID,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfileHeaderAsync(int HeaderID, WSException WSException) {
            this.DeleteProfileHeaderAsync(HeaderID, WSException, null);
        }
        
        /// <remarks/>
        public void DeleteProfileHeaderAsync(int HeaderID, WSException WSException, object userState) {
            if ((this.DeleteProfileHeaderOperationCompleted == null)) {
                this.DeleteProfileHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfileHeaderOperationCompleted);
            }
            this.InvokeAsync("DeleteProfileHeader", new object[] {
                        HeaderID,
                        WSException}, this.DeleteProfileHeaderOperationCompleted, userState);
        }
        
        private void OnDeleteProfileHeaderOperationCompleted(object arg) {
            if ((this.DeleteProfileHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfileHeaderCompleted(this, new DeleteProfileHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/CreateProfileAttribute", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateProfileAttribute([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSProfileAttribute WSProfileAttribute, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("CreateProfileAttribute", new object[] {
                        WSProfileAttribute,
                        WSException});
            WSProfileAttribute = ((WSProfileAttribute)(results[1]));
            WSException = ((WSException)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProfileAttributeAsync(WSProfileAttribute WSProfileAttribute, WSException WSException) {
            this.CreateProfileAttributeAsync(WSProfileAttribute, WSException, null);
        }
        
        /// <remarks/>
        public void CreateProfileAttributeAsync(WSProfileAttribute WSProfileAttribute, WSException WSException, object userState) {
            if ((this.CreateProfileAttributeOperationCompleted == null)) {
                this.CreateProfileAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProfileAttributeOperationCompleted);
            }
            this.InvokeAsync("CreateProfileAttribute", new object[] {
                        WSProfileAttribute,
                        WSException}, this.CreateProfileAttributeOperationCompleted, userState);
        }
        
        private void OnCreateProfileAttributeOperationCompleted(object arg) {
            if ((this.CreateProfileAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProfileAttributeCompleted(this, new CreateProfileAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/UpdateProfileAttribute", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProfileAttribute([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSProfileAttribute WSProfileAttribute, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("UpdateProfileAttribute", new object[] {
                        WSProfileAttribute,
                        WSException});
            WSProfileAttribute = ((WSProfileAttribute)(results[1]));
            WSException = ((WSException)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProfileAttributeAsync(WSProfileAttribute WSProfileAttribute, WSException WSException) {
            this.UpdateProfileAttributeAsync(WSProfileAttribute, WSException, null);
        }
        
        /// <remarks/>
        public void UpdateProfileAttributeAsync(WSProfileAttribute WSProfileAttribute, WSException WSException, object userState) {
            if ((this.UpdateProfileAttributeOperationCompleted == null)) {
                this.UpdateProfileAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProfileAttributeOperationCompleted);
            }
            this.InvokeAsync("UpdateProfileAttribute", new object[] {
                        WSProfileAttribute,
                        WSException}, this.UpdateProfileAttributeOperationCompleted, userState);
        }
        
        private void OnUpdateProfileAttributeOperationCompleted(object arg) {
            if ((this.UpdateProfileAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProfileAttributeCompleted(this, new UpdateProfileAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/DeleteProfileAttribute", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProfileAttribute(int AttributeID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("DeleteProfileAttribute", new object[] {
                        AttributeID,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfileAttributeAsync(int AttributeID, WSException WSException) {
            this.DeleteProfileAttributeAsync(AttributeID, WSException, null);
        }
        
        /// <remarks/>
        public void DeleteProfileAttributeAsync(int AttributeID, WSException WSException, object userState) {
            if ((this.DeleteProfileAttributeOperationCompleted == null)) {
                this.DeleteProfileAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfileAttributeOperationCompleted);
            }
            this.InvokeAsync("DeleteProfileAttribute", new object[] {
                        AttributeID,
                        WSException}, this.DeleteProfileAttributeOperationCompleted, userState);
        }
        
        private void OnDeleteProfileAttributeOperationCompleted(object arg) {
            if ((this.DeleteProfileAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfileAttributeCompleted(this, new DeleteProfileAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetContact", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WSContact", IsNullable=true)]
        public WSContact GetContact(int ListID, string ContactEmailAddress) {
            object[] results = this.Invoke("GetContact", new object[] {
                        ListID,
                        ContactEmailAddress});
            return ((WSContact)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactAsync(int ListID, string ContactEmailAddress) {
            this.GetContactAsync(ListID, ContactEmailAddress, null);
        }
        
        /// <remarks/>
        public void GetContactAsync(int ListID, string ContactEmailAddress, object userState) {
            if ((this.GetContactOperationCompleted == null)) {
                this.GetContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactOperationCompleted);
            }
            this.InvokeAsync("GetContact", new object[] {
                        ListID,
                        ContactEmailAddress}, this.GetContactOperationCompleted, userState);
        }
        
        private void OnGetContactOperationCompleted(object arg) {
            if ((this.GetContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactCompleted(this, new GetContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/SetContact", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubscribeContactResult SetContact([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSContact WSContact, ImportProfileTypeEnum ProfileUpdateType, string ExternalEventIDs, bool OverrideUnsubscribe) {
            object[] results = this.Invoke("SetContact", new object[] {
                        WSContact,
                        ProfileUpdateType,
                        ExternalEventIDs,
                        OverrideUnsubscribe});
            return ((SubscribeContactResult)(results[0]));
        }
        
        /// <remarks/>
        public void SetContactAsync(WSContact WSContact, ImportProfileTypeEnum ProfileUpdateType, string ExternalEventIDs, bool OverrideUnsubscribe) {
            this.SetContactAsync(WSContact, ProfileUpdateType, ExternalEventIDs, OverrideUnsubscribe, null);
        }
        
        /// <remarks/>
        public void SetContactAsync(WSContact WSContact, ImportProfileTypeEnum ProfileUpdateType, string ExternalEventIDs, bool OverrideUnsubscribe, object userState) {
            if ((this.SetContactOperationCompleted == null)) {
                this.SetContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetContactOperationCompleted);
            }
            this.InvokeAsync("SetContact", new object[] {
                        WSContact,
                        ProfileUpdateType,
                        ExternalEventIDs,
                        OverrideUnsubscribe}, this.SetContactOperationCompleted, userState);
        }
        
        private void OnSetContactOperationCompleted(object arg) {
            if ((this.SetContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetContactCompleted(this, new SetContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ChangeContactEmailAddress", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChangeContactEmailResult ChangeContactEmailAddress(int ListID, string ContactEmailAddress, string NewContactEmailAddress) {
            object[] results = this.Invoke("ChangeContactEmailAddress", new object[] {
                        ListID,
                        ContactEmailAddress,
                        NewContactEmailAddress});
            return ((ChangeContactEmailResult)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeContactEmailAddressAsync(int ListID, string ContactEmailAddress, string NewContactEmailAddress) {
            this.ChangeContactEmailAddressAsync(ListID, ContactEmailAddress, NewContactEmailAddress, null);
        }
        
        /// <remarks/>
        public void ChangeContactEmailAddressAsync(int ListID, string ContactEmailAddress, string NewContactEmailAddress, object userState) {
            if ((this.ChangeContactEmailAddressOperationCompleted == null)) {
                this.ChangeContactEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeContactEmailAddressOperationCompleted);
            }
            this.InvokeAsync("ChangeContactEmailAddress", new object[] {
                        ListID,
                        ContactEmailAddress,
                        NewContactEmailAddress}, this.ChangeContactEmailAddressOperationCompleted, userState);
        }
        
        private void OnChangeContactEmailAddressOperationCompleted(object arg) {
            if ((this.ChangeContactEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeContactEmailAddressCompleted(this, new ChangeContactEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/SubscribeContact", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SubscribeContactResult SubscribeContact(int ListID, string ContactEmailAddress, bool OverrideUnsubscribe) {
            object[] results = this.Invoke("SubscribeContact", new object[] {
                        ListID,
                        ContactEmailAddress,
                        OverrideUnsubscribe});
            return ((SubscribeContactResult)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeContactAsync(int ListID, string ContactEmailAddress, bool OverrideUnsubscribe) {
            this.SubscribeContactAsync(ListID, ContactEmailAddress, OverrideUnsubscribe, null);
        }
        
        /// <remarks/>
        public void SubscribeContactAsync(int ListID, string ContactEmailAddress, bool OverrideUnsubscribe, object userState) {
            if ((this.SubscribeContactOperationCompleted == null)) {
                this.SubscribeContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeContactOperationCompleted);
            }
            this.InvokeAsync("SubscribeContact", new object[] {
                        ListID,
                        ContactEmailAddress,
                        OverrideUnsubscribe}, this.SubscribeContactOperationCompleted, userState);
        }
        
        private void OnSubscribeContactOperationCompleted(object arg) {
            if ((this.SubscribeContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeContactCompleted(this, new SubscribeContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/UnsubscribeContact", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnsubscribeContactResult UnsubscribeContact(int ListID, string ContactEmailAddress) {
            object[] results = this.Invoke("UnsubscribeContact", new object[] {
                        ListID,
                        ContactEmailAddress});
            return ((UnsubscribeContactResult)(results[0]));
        }
        
        /// <remarks/>
        public void UnsubscribeContactAsync(int ListID, string ContactEmailAddress) {
            this.UnsubscribeContactAsync(ListID, ContactEmailAddress, null);
        }
        
        /// <remarks/>
        public void UnsubscribeContactAsync(int ListID, string ContactEmailAddress, object userState) {
            if ((this.UnsubscribeContactOperationCompleted == null)) {
                this.UnsubscribeContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnsubscribeContactOperationCompleted);
            }
            this.InvokeAsync("UnsubscribeContact", new object[] {
                        ListID,
                        ContactEmailAddress}, this.UnsubscribeContactOperationCompleted, userState);
        }
        
        private void OnUnsubscribeContactOperationCompleted(object arg) {
            if ((this.UnsubscribeContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnsubscribeContactCompleted(this, new UnsubscribeContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetSpamScore", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WSSpamScore", IsNullable=true)]
        public WSSpamScore GetSpamScore([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSMessage WSMessage, string TestEmail) {
            object[] results = this.Invoke("GetSpamScore", new object[] {
                        WSMessage,
                        TestEmail});
            return ((WSSpamScore)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpamScoreAsync(WSMessage WSMessage, string TestEmail) {
            this.GetSpamScoreAsync(WSMessage, TestEmail, null);
        }
        
        /// <remarks/>
        public void GetSpamScoreAsync(WSMessage WSMessage, string TestEmail, object userState) {
            if ((this.GetSpamScoreOperationCompleted == null)) {
                this.GetSpamScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpamScoreOperationCompleted);
            }
            this.InvokeAsync("GetSpamScore", new object[] {
                        WSMessage,
                        TestEmail}, this.GetSpamScoreOperationCompleted, userState);
        }
        
        private void OnGetSpamScoreOperationCompleted(object arg) {
            if ((this.GetSpamScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpamScoreCompleted(this, new GetSpamScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ScheduleSendListMessage", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ScheduleSendListMessage([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSMessage WSMessage, ref System.DateTime SendDateTime) {
            object[] results = this.Invoke("ScheduleSendListMessage", new object[] {
                        WSMessage,
                        SendDateTime});
            SendDateTime = ((System.DateTime)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ScheduleSendListMessageAsync(WSMessage WSMessage, System.DateTime SendDateTime) {
            this.ScheduleSendListMessageAsync(WSMessage, SendDateTime, null);
        }
        
        /// <remarks/>
        public void ScheduleSendListMessageAsync(WSMessage WSMessage, System.DateTime SendDateTime, object userState) {
            if ((this.ScheduleSendListMessageOperationCompleted == null)) {
                this.ScheduleSendListMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScheduleSendListMessageOperationCompleted);
            }
            this.InvokeAsync("ScheduleSendListMessage", new object[] {
                        WSMessage,
                        SendDateTime}, this.ScheduleSendListMessageOperationCompleted, userState);
        }
        
        private void OnScheduleSendListMessageOperationCompleted(object arg) {
            if ((this.ScheduleSendListMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScheduleSendListMessageCompleted(this, new ScheduleSendListMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ScheduleSendListMessageWithProfileFilter", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ScheduleSendListMessageWithProfileFilter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSMessage WSMessage, WSProfileFilter[] ProfileFilter, ref System.DateTime SendDateTime) {
            object[] results = this.Invoke("ScheduleSendListMessageWithProfileFilter", new object[] {
                        WSMessage,
                        ProfileFilter,
                        SendDateTime});
            SendDateTime = ((System.DateTime)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ScheduleSendListMessageWithProfileFilterAsync(WSMessage WSMessage, WSProfileFilter[] ProfileFilter, System.DateTime SendDateTime) {
            this.ScheduleSendListMessageWithProfileFilterAsync(WSMessage, ProfileFilter, SendDateTime, null);
        }
        
        /// <remarks/>
        public void ScheduleSendListMessageWithProfileFilterAsync(WSMessage WSMessage, WSProfileFilter[] ProfileFilter, System.DateTime SendDateTime, object userState) {
            if ((this.ScheduleSendListMessageWithProfileFilterOperationCompleted == null)) {
                this.ScheduleSendListMessageWithProfileFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScheduleSendListMessageWithProfileFilterOperationCompleted);
            }
            this.InvokeAsync("ScheduleSendListMessageWithProfileFilter", new object[] {
                        WSMessage,
                        ProfileFilter,
                        SendDateTime}, this.ScheduleSendListMessageWithProfileFilterOperationCompleted, userState);
        }
        
        private void OnScheduleSendListMessageWithProfileFilterOperationCompleted(object arg) {
            if ((this.ScheduleSendListMessageWithProfileFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScheduleSendListMessageWithProfileFilterCompleted(this, new ScheduleSendListMessageWithProfileFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/SendListMessage", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendListMessage([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSMessage WSMessage) {
            object[] results = this.Invoke("SendListMessage", new object[] {
                        WSMessage});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendListMessageAsync(WSMessage WSMessage) {
            this.SendListMessageAsync(WSMessage, null);
        }
        
        /// <remarks/>
        public void SendListMessageAsync(WSMessage WSMessage, object userState) {
            if ((this.SendListMessageOperationCompleted == null)) {
                this.SendListMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendListMessageOperationCompleted);
            }
            this.InvokeAsync("SendListMessage", new object[] {
                        WSMessage}, this.SendListMessageOperationCompleted, userState);
        }
        
        private void OnSendListMessageOperationCompleted(object arg) {
            if ((this.SendListMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendListMessageCompleted(this, new SendListMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/SendListMessageWithProfileFilter", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendListMessageWithProfileFilter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSMessage WSMessage, WSProfileFilter[] ProfileFilter) {
            object[] results = this.Invoke("SendListMessageWithProfileFilter", new object[] {
                        WSMessage,
                        ProfileFilter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendListMessageWithProfileFilterAsync(WSMessage WSMessage, WSProfileFilter[] ProfileFilter) {
            this.SendListMessageWithProfileFilterAsync(WSMessage, ProfileFilter, null);
        }
        
        /// <remarks/>
        public void SendListMessageWithProfileFilterAsync(WSMessage WSMessage, WSProfileFilter[] ProfileFilter, object userState) {
            if ((this.SendListMessageWithProfileFilterOperationCompleted == null)) {
                this.SendListMessageWithProfileFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendListMessageWithProfileFilterOperationCompleted);
            }
            this.InvokeAsync("SendListMessageWithProfileFilter", new object[] {
                        WSMessage,
                        ProfileFilter}, this.SendListMessageWithProfileFilterOperationCompleted, userState);
        }
        
        private void OnSendListMessageWithProfileFilterOperationCompleted(object arg) {
            if ((this.SendListMessageWithProfileFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendListMessageWithProfileFilterCompleted(this, new SendListMessageWithProfileFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/SendListMessageTest", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendListMessageTest([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSMessage WSMessage, string TestEmailAddress) {
            object[] results = this.Invoke("SendListMessageTest", new object[] {
                        WSMessage,
                        TestEmailAddress});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendListMessageTestAsync(WSMessage WSMessage, string TestEmailAddress) {
            this.SendListMessageTestAsync(WSMessage, TestEmailAddress, null);
        }
        
        /// <remarks/>
        public void SendListMessageTestAsync(WSMessage WSMessage, string TestEmailAddress, object userState) {
            if ((this.SendListMessageTestOperationCompleted == null)) {
                this.SendListMessageTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendListMessageTestOperationCompleted);
            }
            this.InvokeAsync("SendListMessageTest", new object[] {
                        WSMessage,
                        TestEmailAddress}, this.SendListMessageTestOperationCompleted, userState);
        }
        
        private void OnSendListMessageTestOperationCompleted(object arg) {
            if ((this.SendListMessageTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendListMessageTestCompleted(this, new SendListMessageTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/SendListMessageReview", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendListMessageReview([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WSMessage WSMessage) {
            object[] results = this.Invoke("SendListMessageReview", new object[] {
                        WSMessage});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendListMessageReviewAsync(WSMessage WSMessage) {
            this.SendListMessageReviewAsync(WSMessage, null);
        }
        
        /// <remarks/>
        public void SendListMessageReviewAsync(WSMessage WSMessage, object userState) {
            if ((this.SendListMessageReviewOperationCompleted == null)) {
                this.SendListMessageReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendListMessageReviewOperationCompleted);
            }
            this.InvokeAsync("SendListMessageReview", new object[] {
                        WSMessage}, this.SendListMessageReviewOperationCompleted, userState);
        }
        
        private void OnSendListMessageReviewOperationCompleted(object arg) {
            if ((this.SendListMessageReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendListMessageReviewCompleted(this, new SendListMessageReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetCampaignCollection", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSCampaign[] GetCampaignCollection(int ListID) {
            object[] results = this.Invoke("GetCampaignCollection", new object[] {
                        ListID});
            return ((WSCampaign[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignCollectionAsync(int ListID) {
            this.GetCampaignCollectionAsync(ListID, null);
        }
        
        /// <remarks/>
        public void GetCampaignCollectionAsync(int ListID, object userState) {
            if ((this.GetCampaignCollectionOperationCompleted == null)) {
                this.GetCampaignCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignCollectionOperationCompleted);
            }
            this.InvokeAsync("GetCampaignCollection", new object[] {
                        ListID}, this.GetCampaignCollectionOperationCompleted, userState);
        }
        
        private void OnGetCampaignCollectionOperationCompleted(object arg) {
            if ((this.GetCampaignCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignCollectionCompleted(this, new GetCampaignCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetCharacterSetCollection", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSCharacterSet[] GetCharacterSetCollection() {
            object[] results = this.Invoke("GetCharacterSetCollection", new object[0]);
            return ((WSCharacterSet[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCharacterSetCollectionAsync() {
            this.GetCharacterSetCollectionAsync(null);
        }
        
        /// <remarks/>
        public void GetCharacterSetCollectionAsync(object userState) {
            if ((this.GetCharacterSetCollectionOperationCompleted == null)) {
                this.GetCharacterSetCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCharacterSetCollectionOperationCompleted);
            }
            this.InvokeAsync("GetCharacterSetCollection", new object[0], this.GetCharacterSetCollectionOperationCompleted, userState);
        }
        
        private void OnGetCharacterSetCollectionOperationCompleted(object arg) {
            if ((this.GetCharacterSetCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCharacterSetCollectionCompleted(this, new GetCharacterSetCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/SendSavedMessage", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSavedMessage(int SavedMsgID) {
            object[] results = this.Invoke("SendSavedMessage", new object[] {
                        SavedMsgID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSavedMessageAsync(int SavedMsgID) {
            this.SendSavedMessageAsync(SavedMsgID, null);
        }
        
        /// <remarks/>
        public void SendSavedMessageAsync(int SavedMsgID, object userState) {
            if ((this.SendSavedMessageOperationCompleted == null)) {
                this.SendSavedMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSavedMessageOperationCompleted);
            }
            this.InvokeAsync("SendSavedMessage", new object[] {
                        SavedMsgID}, this.SendSavedMessageOperationCompleted, userState);
        }
        
        private void OnSendSavedMessageOperationCompleted(object arg) {
            if ((this.SendSavedMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSavedMessageCompleted(this, new SendSavedMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/SendSavedMessageTest", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSavedMessageTest(int SavedMsgID, string TestEmailAddress) {
            object[] results = this.Invoke("SendSavedMessageTest", new object[] {
                        SavedMsgID,
                        TestEmailAddress});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSavedMessageTestAsync(int SavedMsgID, string TestEmailAddress) {
            this.SendSavedMessageTestAsync(SavedMsgID, TestEmailAddress, null);
        }
        
        /// <remarks/>
        public void SendSavedMessageTestAsync(int SavedMsgID, string TestEmailAddress, object userState) {
            if ((this.SendSavedMessageTestOperationCompleted == null)) {
                this.SendSavedMessageTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSavedMessageTestOperationCompleted);
            }
            this.InvokeAsync("SendSavedMessageTest", new object[] {
                        SavedMsgID,
                        TestEmailAddress}, this.SendSavedMessageTestOperationCompleted, userState);
        }
        
        private void OnSendSavedMessageTestOperationCompleted(object arg) {
            if ((this.SendSavedMessageTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSavedMessageTestCompleted(this, new SendSavedMessageTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetSavedMessageCollection", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSSavedMessage[] GetSavedMessageCollection(int ListID) {
            object[] results = this.Invoke("GetSavedMessageCollection", new object[] {
                        ListID});
            return ((WSSavedMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSavedMessageCollectionAsync(int ListID) {
            this.GetSavedMessageCollectionAsync(ListID, null);
        }
        
        /// <remarks/>
        public void GetSavedMessageCollectionAsync(int ListID, object userState) {
            if ((this.GetSavedMessageCollectionOperationCompleted == null)) {
                this.GetSavedMessageCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSavedMessageCollectionOperationCompleted);
            }
            this.InvokeAsync("GetSavedMessageCollection", new object[] {
                        ListID}, this.GetSavedMessageCollectionOperationCompleted, userState);
        }
        
        private void OnGetSavedMessageCollectionOperationCompleted(object arg) {
            if ((this.GetSavedMessageCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSavedMessageCollectionCompleted(this, new GetSavedMessageCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/GetFilteredListCount", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFilteredListCount(int ListID, WSProfileFilter[] ProfileFilter) {
            object[] results = this.Invoke("GetFilteredListCount", new object[] {
                        ListID,
                        ProfileFilter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilteredListCountAsync(int ListID, WSProfileFilter[] ProfileFilter) {
            this.GetFilteredListCountAsync(ListID, ProfileFilter, null);
        }
        
        /// <remarks/>
        public void GetFilteredListCountAsync(int ListID, WSProfileFilter[] ProfileFilter, object userState) {
            if ((this.GetFilteredListCountOperationCompleted == null)) {
                this.GetFilteredListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilteredListCountOperationCompleted);
            }
            this.InvokeAsync("GetFilteredListCount", new object[] {
                        ListID,
                        ProfileFilter}, this.GetFilteredListCountOperationCompleted, userState);
        }
        
        private void OnGetFilteredListCountOperationCompleted(object arg) {
            if ((this.GetFilteredListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilteredListCountCompleted(this, new GetFilteredListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportSubscribedContacts", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactSubscriptionInfo[] ReportSubscribedContacts(int ListID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportSubscribedContacts", new object[] {
                        ListID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactSubscriptionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportSubscribedContactsAsync(int ListID, int Page, WSException WSException) {
            this.ReportSubscribedContactsAsync(ListID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportSubscribedContactsAsync(int ListID, int Page, WSException WSException, object userState) {
            if ((this.ReportSubscribedContactsOperationCompleted == null)) {
                this.ReportSubscribedContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportSubscribedContactsOperationCompleted);
            }
            this.InvokeAsync("ReportSubscribedContacts", new object[] {
                        ListID,
                        Page,
                        WSException}, this.ReportSubscribedContactsOperationCompleted, userState);
        }
        
        private void OnReportSubscribedContactsOperationCompleted(object arg) {
            if ((this.ReportSubscribedContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportSubscribedContactsCompleted(this, new ReportSubscribedContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeSubscribedContacts", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactSubscriptionInfo[] ReportRangeSubscribedContacts(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeSubscribedContacts", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactSubscriptionInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeSubscribedContactsAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeSubscribedContactsAsync(ListID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeSubscribedContactsAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeSubscribedContactsOperationCompleted == null)) {
                this.ReportRangeSubscribedContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeSubscribedContactsOperationCompleted);
            }
            this.InvokeAsync("ReportRangeSubscribedContacts", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeSubscribedContactsOperationCompleted, userState);
        }
        
        private void OnReportRangeSubscribedContactsOperationCompleted(object arg) {
            if ((this.ReportRangeSubscribedContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeSubscribedContactsCompleted(this, new ReportRangeSubscribedContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportAdminContactFeedbackLoop", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSFeedbackLoopListing[] ReportAdminContactFeedbackLoop(System.DateTime StartDate, System.DateTime EndDate, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportAdminContactFeedbackLoop", new object[] {
                        StartDate,
                        EndDate,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSFeedbackLoopListing[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportAdminContactFeedbackLoopAsync(System.DateTime StartDate, System.DateTime EndDate, int Page, WSException WSException) {
            this.ReportAdminContactFeedbackLoopAsync(StartDate, EndDate, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportAdminContactFeedbackLoopAsync(System.DateTime StartDate, System.DateTime EndDate, int Page, WSException WSException, object userState) {
            if ((this.ReportAdminContactFeedbackLoopOperationCompleted == null)) {
                this.ReportAdminContactFeedbackLoopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportAdminContactFeedbackLoopOperationCompleted);
            }
            this.InvokeAsync("ReportAdminContactFeedbackLoop", new object[] {
                        StartDate,
                        EndDate,
                        Page,
                        WSException}, this.ReportAdminContactFeedbackLoopOperationCompleted, userState);
        }
        
        private void OnReportAdminContactFeedbackLoopOperationCompleted(object arg) {
            if ((this.ReportAdminContactFeedbackLoopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportAdminContactFeedbackLoopCompleted(this, new ReportAdminContactFeedbackLoopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageContactOpen", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactOpen[] ReportMessageContactOpen(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageContactOpen", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactOpen[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageContactOpenAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageContactOpenAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageContactOpenAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageContactOpenOperationCompleted == null)) {
                this.ReportMessageContactOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageContactOpenOperationCompleted);
            }
            this.InvokeAsync("ReportMessageContactOpen", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageContactOpenOperationCompleted, userState);
        }
        
        private void OnReportMessageContactOpenOperationCompleted(object arg) {
            if ((this.ReportMessageContactOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageContactOpenCompleted(this, new ReportMessageContactOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeMessageContactOpen", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactOpen[] ReportRangeMessageContactOpen(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeMessageContactOpen", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactOpen[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactOpenAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeMessageContactOpenAsync(MsgID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactOpenAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeMessageContactOpenOperationCompleted == null)) {
                this.ReportRangeMessageContactOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeMessageContactOpenOperationCompleted);
            }
            this.InvokeAsync("ReportRangeMessageContactOpen", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeMessageContactOpenOperationCompleted, userState);
        }
        
        private void OnReportRangeMessageContactOpenOperationCompleted(object arg) {
            if ((this.ReportRangeMessageContactOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeMessageContactOpenCompleted(this, new ReportRangeMessageContactOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageContactRead", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactRead[] ReportMessageContactRead(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageContactRead", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactRead[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageContactReadAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageContactReadAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageContactReadAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageContactReadOperationCompleted == null)) {
                this.ReportMessageContactReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageContactReadOperationCompleted);
            }
            this.InvokeAsync("ReportMessageContactRead", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageContactReadOperationCompleted, userState);
        }
        
        private void OnReportMessageContactReadOperationCompleted(object arg) {
            if ((this.ReportMessageContactReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageContactReadCompleted(this, new ReportMessageContactReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeMessageContactRead", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactRead[] ReportRangeMessageContactRead(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeMessageContactRead", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactRead[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactReadAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeMessageContactReadAsync(MsgID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactReadAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeMessageContactReadOperationCompleted == null)) {
                this.ReportRangeMessageContactReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeMessageContactReadOperationCompleted);
            }
            this.InvokeAsync("ReportRangeMessageContactRead", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeMessageContactReadOperationCompleted, userState);
        }
        
        private void OnReportRangeMessageContactReadOperationCompleted(object arg) {
            if ((this.ReportRangeMessageContactReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeMessageContactReadCompleted(this, new ReportRangeMessageContactReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageContactClick", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactClick[] ReportMessageContactClick(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageContactClick", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactClick[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageContactClickAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageContactClickAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageContactClickAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageContactClickOperationCompleted == null)) {
                this.ReportMessageContactClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageContactClickOperationCompleted);
            }
            this.InvokeAsync("ReportMessageContactClick", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageContactClickOperationCompleted, userState);
        }
        
        private void OnReportMessageContactClickOperationCompleted(object arg) {
            if ((this.ReportMessageContactClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageContactClickCompleted(this, new ReportMessageContactClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeMessageContactClick", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactClick[] ReportRangeMessageContactClick(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeMessageContactClick", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactClick[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactClickAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeMessageContactClickAsync(MsgID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactClickAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeMessageContactClickOperationCompleted == null)) {
                this.ReportRangeMessageContactClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeMessageContactClickOperationCompleted);
            }
            this.InvokeAsync("ReportRangeMessageContactClick", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeMessageContactClickOperationCompleted, userState);
        }
        
        private void OnReportRangeMessageContactClickOperationCompleted(object arg) {
            if ((this.ReportRangeMessageContactClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeMessageContactClickCompleted(this, new ReportRangeMessageContactClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageContactPassalong", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactPassalong[] ReportMessageContactPassalong(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageContactPassalong", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactPassalong[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageContactPassalongAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageContactPassalongAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageContactPassalongAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageContactPassalongOperationCompleted == null)) {
                this.ReportMessageContactPassalongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageContactPassalongOperationCompleted);
            }
            this.InvokeAsync("ReportMessageContactPassalong", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageContactPassalongOperationCompleted, userState);
        }
        
        private void OnReportMessageContactPassalongOperationCompleted(object arg) {
            if ((this.ReportMessageContactPassalongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageContactPassalongCompleted(this, new ReportMessageContactPassalongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeMessageContactPassalong", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactPassalong[] ReportRangeMessageContactPassalong(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeMessageContactPassalong", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactPassalong[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactPassalongAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeMessageContactPassalongAsync(MsgID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactPassalongAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeMessageContactPassalongOperationCompleted == null)) {
                this.ReportRangeMessageContactPassalongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeMessageContactPassalongOperationCompleted);
            }
            this.InvokeAsync("ReportRangeMessageContactPassalong", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeMessageContactPassalongOperationCompleted, userState);
        }
        
        private void OnReportRangeMessageContactPassalongOperationCompleted(object arg) {
            if ((this.ReportRangeMessageContactPassalongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeMessageContactPassalongCompleted(this, new ReportRangeMessageContactPassalongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageContactBounces", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactBounce[] ReportMessageContactBounces(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageContactBounces", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactBounce[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageContactBouncesAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageContactBouncesAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageContactBouncesAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageContactBouncesOperationCompleted == null)) {
                this.ReportMessageContactBouncesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageContactBouncesOperationCompleted);
            }
            this.InvokeAsync("ReportMessageContactBounces", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageContactBouncesOperationCompleted, userState);
        }
        
        private void OnReportMessageContactBouncesOperationCompleted(object arg) {
            if ((this.ReportMessageContactBouncesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageContactBouncesCompleted(this, new ReportMessageContactBouncesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeMessageContactBounces", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactBounce[] ReportRangeMessageContactBounces(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeMessageContactBounces", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactBounce[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactBouncesAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeMessageContactBouncesAsync(MsgID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactBouncesAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeMessageContactBouncesOperationCompleted == null)) {
                this.ReportRangeMessageContactBouncesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeMessageContactBouncesOperationCompleted);
            }
            this.InvokeAsync("ReportRangeMessageContactBounces", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeMessageContactBouncesOperationCompleted, userState);
        }
        
        private void OnReportRangeMessageContactBouncesOperationCompleted(object arg) {
            if ((this.ReportRangeMessageContactBouncesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeMessageContactBouncesCompleted(this, new ReportRangeMessageContactBouncesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportListMessageActivity", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageActivity[] ReportListMessageActivity(int ListID, System.DateTime StartDate, System.DateTime EndDate, bool IncludeTestMessages, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportListMessageActivity", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        IncludeTestMessages,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageActivity[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportListMessageActivityAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, bool IncludeTestMessages, WSException WSException) {
            this.ReportListMessageActivityAsync(ListID, StartDate, EndDate, IncludeTestMessages, WSException, null);
        }
        
        /// <remarks/>
        public void ReportListMessageActivityAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, bool IncludeTestMessages, WSException WSException, object userState) {
            if ((this.ReportListMessageActivityOperationCompleted == null)) {
                this.ReportListMessageActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportListMessageActivityOperationCompleted);
            }
            this.InvokeAsync("ReportListMessageActivity", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        IncludeTestMessages,
                        WSException}, this.ReportListMessageActivityOperationCompleted, userState);
        }
        
        private void OnReportListMessageActivityOperationCompleted(object arg) {
            if ((this.ReportListMessageActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportListMessageActivityCompleted(this, new ReportListMessageActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportListMessageDelivery", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageDelivery[] ReportListMessageDelivery(int ListID, System.DateTime StartDate, System.DateTime EndDate, bool IncludeTestMessages, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportListMessageDelivery", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        IncludeTestMessages,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageDelivery[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportListMessageDeliveryAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, bool IncludeTestMessages, WSException WSException) {
            this.ReportListMessageDeliveryAsync(ListID, StartDate, EndDate, IncludeTestMessages, WSException, null);
        }
        
        /// <remarks/>
        public void ReportListMessageDeliveryAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, bool IncludeTestMessages, WSException WSException, object userState) {
            if ((this.ReportListMessageDeliveryOperationCompleted == null)) {
                this.ReportListMessageDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportListMessageDeliveryOperationCompleted);
            }
            this.InvokeAsync("ReportListMessageDelivery", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        IncludeTestMessages,
                        WSException}, this.ReportListMessageDeliveryOperationCompleted, userState);
        }
        
        private void OnReportListMessageDeliveryOperationCompleted(object arg) {
            if ((this.ReportListMessageDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportListMessageDeliveryCompleted(this, new ReportListMessageDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportListContactRemoval", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactRemovalInfo[] ReportListContactRemoval(int ListID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportListContactRemoval", new object[] {
                        ListID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactRemovalInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportListContactRemovalAsync(int ListID, int Page, WSException WSException) {
            this.ReportListContactRemovalAsync(ListID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportListContactRemovalAsync(int ListID, int Page, WSException WSException, object userState) {
            if ((this.ReportListContactRemovalOperationCompleted == null)) {
                this.ReportListContactRemovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportListContactRemovalOperationCompleted);
            }
            this.InvokeAsync("ReportListContactRemoval", new object[] {
                        ListID,
                        Page,
                        WSException}, this.ReportListContactRemovalOperationCompleted, userState);
        }
        
        private void OnReportListContactRemovalOperationCompleted(object arg) {
            if ((this.ReportListContactRemovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportListContactRemovalCompleted(this, new ReportListContactRemovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeListContactRemoval", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactRemovalInfo[] ReportRangeListContactRemoval(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeListContactRemoval", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactRemovalInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeListContactRemovalAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeListContactRemovalAsync(ListID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeListContactRemovalAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeListContactRemovalOperationCompleted == null)) {
                this.ReportRangeListContactRemovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeListContactRemovalOperationCompleted);
            }
            this.InvokeAsync("ReportRangeListContactRemoval", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeListContactRemovalOperationCompleted, userState);
        }
        
        private void OnReportRangeListContactRemovalOperationCompleted(object arg) {
            if ((this.ReportRangeListContactRemovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeListContactRemovalCompleted(this, new ReportRangeListContactRemovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportListContactHygiene", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactHygieneInfo[] ReportListContactHygiene(int ListID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportListContactHygiene", new object[] {
                        ListID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactHygieneInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportListContactHygieneAsync(int ListID, int Page, WSException WSException) {
            this.ReportListContactHygieneAsync(ListID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportListContactHygieneAsync(int ListID, int Page, WSException WSException, object userState) {
            if ((this.ReportListContactHygieneOperationCompleted == null)) {
                this.ReportListContactHygieneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportListContactHygieneOperationCompleted);
            }
            this.InvokeAsync("ReportListContactHygiene", new object[] {
                        ListID,
                        Page,
                        WSException}, this.ReportListContactHygieneOperationCompleted, userState);
        }
        
        private void OnReportListContactHygieneOperationCompleted(object arg) {
            if ((this.ReportListContactHygieneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportListContactHygieneCompleted(this, new ReportListContactHygieneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeListContactHygiene", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactHygieneInfo[] ReportRangeListContactHygiene(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeListContactHygiene", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactHygieneInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeListContactHygieneAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeListContactHygieneAsync(ListID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeListContactHygieneAsync(int ListID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeListContactHygieneOperationCompleted == null)) {
                this.ReportRangeListContactHygieneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeListContactHygieneOperationCompleted);
            }
            this.InvokeAsync("ReportRangeListContactHygiene", new object[] {
                        ListID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeListContactHygieneOperationCompleted, userState);
        }
        
        private void OnReportRangeListContactHygieneOperationCompleted(object arg) {
            if ((this.ReportRangeListContactHygieneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeListContactHygieneCompleted(this, new ReportRangeListContactHygieneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageLinkClick", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageLink[] ReportMessageLinkClick(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageLinkClick", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageLink[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageLinkClickAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageLinkClickAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageLinkClickAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageLinkClickOperationCompleted == null)) {
                this.ReportMessageLinkClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageLinkClickOperationCompleted);
            }
            this.InvokeAsync("ReportMessageLinkClick", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageLinkClickOperationCompleted, userState);
        }
        
        private void OnReportMessageLinkClickOperationCompleted(object arg) {
            if ((this.ReportMessageLinkClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageLinkClickCompleted(this, new ReportMessageLinkClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportContactLinkClick", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactLinkClick[] ReportContactLinkClick(int LinkID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportContactLinkClick", new object[] {
                        LinkID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactLinkClick[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportContactLinkClickAsync(int LinkID, int Page, WSException WSException) {
            this.ReportContactLinkClickAsync(LinkID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportContactLinkClickAsync(int LinkID, int Page, WSException WSException, object userState) {
            if ((this.ReportContactLinkClickOperationCompleted == null)) {
                this.ReportContactLinkClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportContactLinkClickOperationCompleted);
            }
            this.InvokeAsync("ReportContactLinkClick", new object[] {
                        LinkID,
                        Page,
                        WSException}, this.ReportContactLinkClickOperationCompleted, userState);
        }
        
        private void OnReportContactLinkClickOperationCompleted(object arg) {
            if ((this.ReportContactLinkClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportContactLinkClickCompleted(this, new ReportContactLinkClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageLocationClick", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageLocationClick[] ReportMessageLocationClick(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageLocationClick", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageLocationClick[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageLocationClickAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageLocationClickAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageLocationClickAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageLocationClickOperationCompleted == null)) {
                this.ReportMessageLocationClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageLocationClickOperationCompleted);
            }
            this.InvokeAsync("ReportMessageLocationClick", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageLocationClickOperationCompleted, userState);
        }
        
        private void OnReportMessageLocationClickOperationCompleted(object arg) {
            if ((this.ReportMessageLocationClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageLocationClickCompleted(this, new ReportMessageLocationClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageLocationOpen", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageLocationOpen[] ReportMessageLocationOpen(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageLocationOpen", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageLocationOpen[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageLocationOpenAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageLocationOpenAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageLocationOpenAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageLocationOpenOperationCompleted == null)) {
                this.ReportMessageLocationOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageLocationOpenOperationCompleted);
            }
            this.InvokeAsync("ReportMessageLocationOpen", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageLocationOpenOperationCompleted, userState);
        }
        
        private void OnReportMessageLocationOpenOperationCompleted(object arg) {
            if ((this.ReportMessageLocationOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageLocationOpenCompleted(this, new ReportMessageLocationOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageLocationRead", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageLocationRead[] ReportMessageLocationRead(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageLocationRead", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageLocationRead[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageLocationReadAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageLocationReadAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageLocationReadAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageLocationReadOperationCompleted == null)) {
                this.ReportMessageLocationReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageLocationReadOperationCompleted);
            }
            this.InvokeAsync("ReportMessageLocationRead", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageLocationReadOperationCompleted, userState);
        }
        
        private void OnReportMessageLocationReadOperationCompleted(object arg) {
            if ((this.ReportMessageLocationReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageLocationReadCompleted(this, new ReportMessageLocationReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageLocationContactClick", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageLocationContactClick[] ReportMessageLocationContactClick(int MsgID, int CountryID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageLocationContactClick", new object[] {
                        MsgID,
                        CountryID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageLocationContactClick[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageLocationContactClickAsync(int MsgID, int CountryID, int Page, WSException WSException) {
            this.ReportMessageLocationContactClickAsync(MsgID, CountryID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageLocationContactClickAsync(int MsgID, int CountryID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageLocationContactClickOperationCompleted == null)) {
                this.ReportMessageLocationContactClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageLocationContactClickOperationCompleted);
            }
            this.InvokeAsync("ReportMessageLocationContactClick", new object[] {
                        MsgID,
                        CountryID,
                        Page,
                        WSException}, this.ReportMessageLocationContactClickOperationCompleted, userState);
        }
        
        private void OnReportMessageLocationContactClickOperationCompleted(object arg) {
            if ((this.ReportMessageLocationContactClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageLocationContactClickCompleted(this, new ReportMessageLocationContactClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageLocationContactOpen", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageLocationContactOpen[] ReportMessageLocationContactOpen(int MsgID, int CountryID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageLocationContactOpen", new object[] {
                        MsgID,
                        CountryID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageLocationContactOpen[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageLocationContactOpenAsync(int MsgID, int CountryID, int Page, WSException WSException) {
            this.ReportMessageLocationContactOpenAsync(MsgID, CountryID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageLocationContactOpenAsync(int MsgID, int CountryID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageLocationContactOpenOperationCompleted == null)) {
                this.ReportMessageLocationContactOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageLocationContactOpenOperationCompleted);
            }
            this.InvokeAsync("ReportMessageLocationContactOpen", new object[] {
                        MsgID,
                        CountryID,
                        Page,
                        WSException}, this.ReportMessageLocationContactOpenOperationCompleted, userState);
        }
        
        private void OnReportMessageLocationContactOpenOperationCompleted(object arg) {
            if ((this.ReportMessageLocationContactOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageLocationContactOpenCompleted(this, new ReportMessageLocationContactOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageLocationContactRead", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageLocationContactRead[] ReportMessageLocationContactRead(int MsgID, int CountryID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageLocationContactRead", new object[] {
                        MsgID,
                        CountryID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageLocationContactRead[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageLocationContactReadAsync(int MsgID, int CountryID, int Page, WSException WSException) {
            this.ReportMessageLocationContactReadAsync(MsgID, CountryID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageLocationContactReadAsync(int MsgID, int CountryID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageLocationContactReadOperationCompleted == null)) {
                this.ReportMessageLocationContactReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageLocationContactReadOperationCompleted);
            }
            this.InvokeAsync("ReportMessageLocationContactRead", new object[] {
                        MsgID,
                        CountryID,
                        Page,
                        WSException}, this.ReportMessageLocationContactReadOperationCompleted, userState);
        }
        
        private void OnReportMessageLocationContactReadOperationCompleted(object arg) {
            if ((this.ReportMessageLocationContactReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageLocationContactReadCompleted(this, new ReportMessageLocationContactReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageContactActivity", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSMessageContactActivity[] ReportMessageContactActivity(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageContactActivity", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSMessageContactActivity[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageContactActivityAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageContactActivityAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageContactActivityAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageContactActivityOperationCompleted == null)) {
                this.ReportMessageContactActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageContactActivityOperationCompleted);
            }
            this.InvokeAsync("ReportMessageContactActivity", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageContactActivityOperationCompleted, userState);
        }
        
        private void OnReportMessageContactActivityOperationCompleted(object arg) {
            if ((this.ReportMessageContactActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageContactActivityCompleted(this, new ReportMessageContactActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportRangeMessageContactRemoval", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactRemovalInfo[] ReportRangeMessageContactRemoval(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            object[] results = this.Invoke("ReportRangeMessageContactRemoval", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page});
            return ((WSContactRemovalInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactRemovalAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page) {
            this.ReportRangeMessageContactRemovalAsync(MsgID, StartDate, EndDate, Page, null);
        }
        
        /// <remarks/>
        public void ReportRangeMessageContactRemovalAsync(int MsgID, System.DateTime StartDate, System.DateTime EndDate, int Page, object userState) {
            if ((this.ReportRangeMessageContactRemovalOperationCompleted == null)) {
                this.ReportRangeMessageContactRemovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportRangeMessageContactRemovalOperationCompleted);
            }
            this.InvokeAsync("ReportRangeMessageContactRemoval", new object[] {
                        MsgID,
                        StartDate,
                        EndDate,
                        Page}, this.ReportRangeMessageContactRemovalOperationCompleted, userState);
        }
        
        private void OnReportRangeMessageContactRemovalOperationCompleted(object arg) {
            if ((this.ReportRangeMessageContactRemovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportRangeMessageContactRemovalCompleted(this, new ReportRangeMessageContactRemovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportMessageContactRemoval", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactRemovalInfo[] ReportMessageContactRemoval(int MsgID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportMessageContactRemoval", new object[] {
                        MsgID,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactRemovalInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportMessageContactRemovalAsync(int MsgID, int Page, WSException WSException) {
            this.ReportMessageContactRemovalAsync(MsgID, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportMessageContactRemovalAsync(int MsgID, int Page, WSException WSException, object userState) {
            if ((this.ReportMessageContactRemovalOperationCompleted == null)) {
                this.ReportMessageContactRemovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportMessageContactRemovalOperationCompleted);
            }
            this.InvokeAsync("ReportMessageContactRemoval", new object[] {
                        MsgID,
                        Page,
                        WSException}, this.ReportMessageContactRemovalOperationCompleted, userState);
        }
        
        private void OnReportMessageContactRemovalOperationCompleted(object arg) {
            if ((this.ReportMessageContactRemovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportMessageContactRemovalCompleted(this, new ReportMessageContactRemovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportContactMessageActivity", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSContactMessageActivity[] ReportContactMessageActivity(int ListID, string EmailAddress, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportContactMessageActivity", new object[] {
                        ListID,
                        EmailAddress,
                        Page,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSContactMessageActivity[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportContactMessageActivityAsync(int ListID, string EmailAddress, int Page, WSException WSException) {
            this.ReportContactMessageActivityAsync(ListID, EmailAddress, Page, WSException, null);
        }
        
        /// <remarks/>
        public void ReportContactMessageActivityAsync(int ListID, string EmailAddress, int Page, WSException WSException, object userState) {
            if ((this.ReportContactMessageActivityOperationCompleted == null)) {
                this.ReportContactMessageActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportContactMessageActivityOperationCompleted);
            }
            this.InvokeAsync("ReportContactMessageActivity", new object[] {
                        ListID,
                        EmailAddress,
                        Page,
                        WSException}, this.ReportContactMessageActivityOperationCompleted, userState);
        }
        
        private void OnReportContactMessageActivityOperationCompleted(object arg) {
            if ((this.ReportContactMessageActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportContactMessageActivityCompleted(this, new ReportContactMessageActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportListImportHistory", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSImportHistory[] ReportListImportHistory(int ListID, int Page, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportListImportHistory", new object[] {
                        ListID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSImportHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportListImportHistoryAsync(int ListID, int Page, System.Nullable<System.DateTime> StartDate, System.Nullable<System.DateTime> EndDate, WSException WSException) {
            this.ReportListImportHistoryAsync(ListID, Page, StartDate, EndDate, WSException, null);
        }
        
        /// <remarks/>
        public void ReportListImportHistoryAsync(int ListID, int Page, System.Nullable<System.DateTime> StartDate, System.Nullable<System.DateTime> EndDate, WSException WSException, object userState) {
            if ((this.ReportListImportHistoryOperationCompleted == null)) {
                this.ReportListImportHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportListImportHistoryOperationCompleted);
            }
            this.InvokeAsync("ReportListImportHistory", new object[] {
                        ListID,
                        Page,
                        StartDate,
                        EndDate,
                        WSException}, this.ReportListImportHistoryOperationCompleted, userState);
        }
        
        private void OnReportListImportHistoryOperationCompleted(object arg) {
            if ((this.ReportListImportHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportListImportHistoryCompleted(this, new ReportListImportHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WSUserValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservices.listrak.com/v31/ReportImportContactDetail", RequestNamespace="http://webservices.listrak.com/v31/", ResponseNamespace="http://webservices.listrak.com/v31/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WSImportContact[] ReportImportContactDetail(int ImportFileID, int Page, WSImportResultEnum ImportResult, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref WSException WSException) {
            object[] results = this.Invoke("ReportImportContactDetail", new object[] {
                        ImportFileID,
                        Page,
                        ImportResult,
                        WSException});
            WSException = ((WSException)(results[1]));
            return ((WSImportContact[])(results[0]));
        }
        
        /// <remarks/>
        public void ReportImportContactDetailAsync(int ImportFileID, int Page, WSImportResultEnum ImportResult, WSException WSException) {
            this.ReportImportContactDetailAsync(ImportFileID, Page, ImportResult, WSException, null);
        }
        
        /// <remarks/>
        public void ReportImportContactDetailAsync(int ImportFileID, int Page, WSImportResultEnum ImportResult, WSException WSException, object userState) {
            if ((this.ReportImportContactDetailOperationCompleted == null)) {
                this.ReportImportContactDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportImportContactDetailOperationCompleted);
            }
            this.InvokeAsync("ReportImportContactDetail", new object[] {
                        ImportFileID,
                        Page,
                        ImportResult,
                        WSException}, this.ReportImportContactDetailOperationCompleted, userState);
        }
        
        private void OnReportImportContactDetailOperationCompleted(object arg) {
            if ((this.ReportImportContactDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportImportContactDetailCompleted(this, new ReportImportContactDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://webservices.listrak.com/v31/", IsNullable=false)]
    public partial class WSUser : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSImportContact {
        
        private string emailAddressField;
        
        private int contactIDField;
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSImportHistory {
        
        private int importFileIDField;
        
        private string importSourceField;
        
        private string importTypeField;
        
        private string profileImportTypeField;
        
        private string fileNameField;
        
        private int fileSizeField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private int processedCountField;
        
        private int invalidEmailCountField;
        
        private int subscribedCountField;
        
        private int unSubscribedCountField;
        
        private int alreadySubscribedCountField;
        
        private int alreadyUnsubscribedCountField;
        
        private int previouslyUnsubscribedCountField;
        
        private int suppressedCountField;
        
        private int bannedCountField;
        
        private int skippedCountField;
        
        /// <remarks/>
        public int ImportFileID {
            get {
                return this.importFileIDField;
            }
            set {
                this.importFileIDField = value;
            }
        }
        
        /// <remarks/>
        public string ImportSource {
            get {
                return this.importSourceField;
            }
            set {
                this.importSourceField = value;
            }
        }
        
        /// <remarks/>
        public string ImportType {
            get {
                return this.importTypeField;
            }
            set {
                this.importTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ProfileImportType {
            get {
                return this.profileImportTypeField;
            }
            set {
                this.profileImportTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public int FileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessedCount {
            get {
                return this.processedCountField;
            }
            set {
                this.processedCountField = value;
            }
        }
        
        /// <remarks/>
        public int InvalidEmailCount {
            get {
                return this.invalidEmailCountField;
            }
            set {
                this.invalidEmailCountField = value;
            }
        }
        
        /// <remarks/>
        public int SubscribedCount {
            get {
                return this.subscribedCountField;
            }
            set {
                this.subscribedCountField = value;
            }
        }
        
        /// <remarks/>
        public int UnSubscribedCount {
            get {
                return this.unSubscribedCountField;
            }
            set {
                this.unSubscribedCountField = value;
            }
        }
        
        /// <remarks/>
        public int AlreadySubscribedCount {
            get {
                return this.alreadySubscribedCountField;
            }
            set {
                this.alreadySubscribedCountField = value;
            }
        }
        
        /// <remarks/>
        public int AlreadyUnsubscribedCount {
            get {
                return this.alreadyUnsubscribedCountField;
            }
            set {
                this.alreadyUnsubscribedCountField = value;
            }
        }
        
        /// <remarks/>
        public int PreviouslyUnsubscribedCount {
            get {
                return this.previouslyUnsubscribedCountField;
            }
            set {
                this.previouslyUnsubscribedCountField = value;
            }
        }
        
        /// <remarks/>
        public int SuppressedCount {
            get {
                return this.suppressedCountField;
            }
            set {
                this.suppressedCountField = value;
            }
        }
        
        /// <remarks/>
        public int BannedCount {
            get {
                return this.bannedCountField;
            }
            set {
                this.bannedCountField = value;
            }
        }
        
        /// <remarks/>
        public int SkippedCount {
            get {
                return this.skippedCountField;
            }
            set {
                this.skippedCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactMessageActivity {
        
        private int listIDField;
        
        private string listNameField;
        
        private int msgIDField;
        
        private string subjectField;
        
        private bool isOpenField;
        
        private bool isReadField;
        
        private bool isClickField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string ListName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOpen {
            get {
                return this.isOpenField;
            }
            set {
                this.isOpenField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRead {
            get {
                return this.isReadField;
            }
            set {
                this.isReadField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClick {
            get {
                return this.isClickField;
            }
            set {
                this.isClickField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageContactActivity {
        
        private int msgIDField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime sendDateField;
        
        private bool openedField;
        
        private bool readField;
        
        private int clickCountField;
        
        private int bounceCountField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Opened {
            get {
                return this.openedField;
            }
            set {
                this.openedField = value;
            }
        }
        
        /// <remarks/>
        public bool Read {
            get {
                return this.readField;
            }
            set {
                this.readField = value;
            }
        }
        
        /// <remarks/>
        public int ClickCount {
            get {
                return this.clickCountField;
            }
            set {
                this.clickCountField = value;
            }
        }
        
        /// <remarks/>
        public int BounceCount {
            get {
                return this.bounceCountField;
            }
            set {
                this.bounceCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageLocationContactRead {
        
        private int msgIDField;
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private System.DateTime readDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReadDate {
            get {
                return this.readDateField;
            }
            set {
                this.readDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageLocationContactOpen {
        
        private int msgIDField;
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private System.DateTime openDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OpenDate {
            get {
                return this.openDateField;
            }
            set {
                this.openDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageLocationContactClick {
        
        private int msgIDField;
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private System.DateTime clickDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ClickDate {
            get {
                return this.clickDateField;
            }
            set {
                this.clickDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageLocationRead {
        
        private int msgIDField;
        
        private int countryIDField;
        
        private int regionIDField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private int readCountField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int CountryID {
            get {
                return this.countryIDField;
            }
            set {
                this.countryIDField = value;
            }
        }
        
        /// <remarks/>
        public int RegionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public int ReadCount {
            get {
                return this.readCountField;
            }
            set {
                this.readCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageLocationOpen {
        
        private int msgIDField;
        
        private int countryIDField;
        
        private int regionIDField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private int openCountField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int CountryID {
            get {
                return this.countryIDField;
            }
            set {
                this.countryIDField = value;
            }
        }
        
        /// <remarks/>
        public int RegionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public int OpenCount {
            get {
                return this.openCountField;
            }
            set {
                this.openCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageLocationClick {
        
        private int msgIDField;
        
        private int countryIDField;
        
        private int regionIDField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private int clickCountField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int CountryID {
            get {
                return this.countryIDField;
            }
            set {
                this.countryIDField = value;
            }
        }
        
        /// <remarks/>
        public int RegionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public int ClickCount {
            get {
                return this.clickCountField;
            }
            set {
                this.clickCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactLinkClick {
        
        private int linkIDField;
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private string linkURLField;
        
        private string clickDateField;
        
        /// <remarks/>
        public int LinkID {
            get {
                return this.linkIDField;
            }
            set {
                this.linkIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string LinkURL {
            get {
                return this.linkURLField;
            }
            set {
                this.linkURLField = value;
            }
        }
        
        /// <remarks/>
        public string ClickDate {
            get {
                return this.clickDateField;
            }
            set {
                this.clickDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageLink {
        
        private int msgIDField;
        
        private int linkIDField;
        
        private string linkURLField;
        
        private string linkTypeField;
        
        private int clickCountField;
        
        private int clickerCountField;
        
        private decimal clickPercentField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int LinkID {
            get {
                return this.linkIDField;
            }
            set {
                this.linkIDField = value;
            }
        }
        
        /// <remarks/>
        public string LinkURL {
            get {
                return this.linkURLField;
            }
            set {
                this.linkURLField = value;
            }
        }
        
        /// <remarks/>
        public string LinkType {
            get {
                return this.linkTypeField;
            }
            set {
                this.linkTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ClickCount {
            get {
                return this.clickCountField;
            }
            set {
                this.clickCountField = value;
            }
        }
        
        /// <remarks/>
        public int ClickerCount {
            get {
                return this.clickerCountField;
            }
            set {
                this.clickerCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal ClickPercent {
            get {
                return this.clickPercentField;
            }
            set {
                this.clickPercentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactHygieneInfo {
        
        private string contactIDField;
        
        private string oldEmailAddressField;
        
        private string emailAddressField;
        
        private string addDateField;
        
        private string hygieneDateField;
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string OldEmailAddress {
            get {
                return this.oldEmailAddressField;
            }
            set {
                this.oldEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string AddDate {
            get {
                return this.addDateField;
            }
            set {
                this.addDateField = value;
            }
        }
        
        /// <remarks/>
        public string HygieneDate {
            get {
                return this.hygieneDateField;
            }
            set {
                this.hygieneDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactRemovalInfo {
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime additionDateField;
        
        private System.DateTime removalDateField;
        
        private string removalMethodField;
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AdditionDate {
            get {
                return this.additionDateField;
            }
            set {
                this.additionDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RemovalDate {
            get {
                return this.removalDateField;
            }
            set {
                this.removalDateField = value;
            }
        }
        
        /// <remarks/>
        public string RemovalMethod {
            get {
                return this.removalMethodField;
            }
            set {
                this.removalMethodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageDelivery {
        
        private int listIDField;
        
        private int msgIDField;
        
        private string subjectField;
        
        private System.DateTime sendDateField;
        
        private int deliverCountField;
        
        private decimal deliverPercentField;
        
        private int bounceCountField;
        
        private decimal bouncePercentField;
        
        private int passAlongCountField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public int DeliverCount {
            get {
                return this.deliverCountField;
            }
            set {
                this.deliverCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal DeliverPercent {
            get {
                return this.deliverPercentField;
            }
            set {
                this.deliverPercentField = value;
            }
        }
        
        /// <remarks/>
        public int BounceCount {
            get {
                return this.bounceCountField;
            }
            set {
                this.bounceCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal BouncePercent {
            get {
                return this.bouncePercentField;
            }
            set {
                this.bouncePercentField = value;
            }
        }
        
        /// <remarks/>
        public int PassAlongCount {
            get {
                return this.passAlongCountField;
            }
            set {
                this.passAlongCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageActivity {
        
        private int listIDField;
        
        private int msgIDField;
        
        private string subjectField;
        
        private System.DateTime sendDateField;
        
        private int deliverCountField;
        
        private int removeCountField;
        
        private decimal removePercentField;
        
        private int openCountField;
        
        private decimal openPercentField;
        
        private int readCountField;
        
        private decimal readPercentField;
        
        private int clickCountField;
        
        private int clickerCountField;
        
        private int repeatClickerCountField;
        
        private int newClickerCountField;
        
        private decimal clickerPercentField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public int DeliverCount {
            get {
                return this.deliverCountField;
            }
            set {
                this.deliverCountField = value;
            }
        }
        
        /// <remarks/>
        public int RemoveCount {
            get {
                return this.removeCountField;
            }
            set {
                this.removeCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal RemovePercent {
            get {
                return this.removePercentField;
            }
            set {
                this.removePercentField = value;
            }
        }
        
        /// <remarks/>
        public int OpenCount {
            get {
                return this.openCountField;
            }
            set {
                this.openCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal OpenPercent {
            get {
                return this.openPercentField;
            }
            set {
                this.openPercentField = value;
            }
        }
        
        /// <remarks/>
        public int ReadCount {
            get {
                return this.readCountField;
            }
            set {
                this.readCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal ReadPercent {
            get {
                return this.readPercentField;
            }
            set {
                this.readPercentField = value;
            }
        }
        
        /// <remarks/>
        public int ClickCount {
            get {
                return this.clickCountField;
            }
            set {
                this.clickCountField = value;
            }
        }
        
        /// <remarks/>
        public int ClickerCount {
            get {
                return this.clickerCountField;
            }
            set {
                this.clickerCountField = value;
            }
        }
        
        /// <remarks/>
        public int RepeatClickerCount {
            get {
                return this.repeatClickerCountField;
            }
            set {
                this.repeatClickerCountField = value;
            }
        }
        
        /// <remarks/>
        public int NewClickerCount {
            get {
                return this.newClickerCountField;
            }
            set {
                this.newClickerCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal ClickerPercent {
            get {
                return this.clickerPercentField;
            }
            set {
                this.clickerPercentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactBounce {
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private string bounceReasonField;
        
        private string bounceDetailField;
        
        private string bounceDateField;
        
        private int bounceCountField;
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string BounceReason {
            get {
                return this.bounceReasonField;
            }
            set {
                this.bounceReasonField = value;
            }
        }
        
        /// <remarks/>
        public string BounceDetail {
            get {
                return this.bounceDetailField;
            }
            set {
                this.bounceDetailField = value;
            }
        }
        
        /// <remarks/>
        public string BounceDate {
            get {
                return this.bounceDateField;
            }
            set {
                this.bounceDateField = value;
            }
        }
        
        /// <remarks/>
        public int BounceCount {
            get {
                return this.bounceCountField;
            }
            set {
                this.bounceCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactPassalong {
        
        private string passAlongDateField;
        
        private string fromNameField;
        
        private string fromEmailAddressField;
        
        private string fromContactIDField;
        
        private string toNameField;
        
        private string toEmailAddressField;
        
        private string toContactIDField;
        
        /// <remarks/>
        public string PassAlongDate {
            get {
                return this.passAlongDateField;
            }
            set {
                this.passAlongDateField = value;
            }
        }
        
        /// <remarks/>
        public string FromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        public string FromEmailAddress {
            get {
                return this.fromEmailAddressField;
            }
            set {
                this.fromEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string FromContactID {
            get {
                return this.fromContactIDField;
            }
            set {
                this.fromContactIDField = value;
            }
        }
        
        /// <remarks/>
        public string ToName {
            get {
                return this.toNameField;
            }
            set {
                this.toNameField = value;
            }
        }
        
        /// <remarks/>
        public string ToEmailAddress {
            get {
                return this.toEmailAddressField;
            }
            set {
                this.toEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ToContactID {
            get {
                return this.toContactIDField;
            }
            set {
                this.toContactIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactClick {
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private string linkDescriptionField;
        
        private string linkUrlField;
        
        private string clickDateField;
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string LinkDescription {
            get {
                return this.linkDescriptionField;
            }
            set {
                this.linkDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string LinkUrl {
            get {
                return this.linkUrlField;
            }
            set {
                this.linkUrlField = value;
            }
        }
        
        /// <remarks/>
        public string ClickDate {
            get {
                return this.clickDateField;
            }
            set {
                this.clickDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactRead {
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private string readDateField;
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ReadDate {
            get {
                return this.readDateField;
            }
            set {
                this.readDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactOpen {
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private string openDateField;
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string OpenDate {
            get {
                return this.openDateField;
            }
            set {
                this.openDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSFeedbackLoopListing {
        
        private int listIDField;
        
        private string listNameField;
        
        private int campaignIDField;
        
        private string campaignNameField;
        
        private int messageIDField;
        
        private string messageSubjectField;
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime abuseDateField;
        
        private string iSPNameField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string ListName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public int CampaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        public string CampaignName {
            get {
                return this.campaignNameField;
            }
            set {
                this.campaignNameField = value;
            }
        }
        
        /// <remarks/>
        public int MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        public string MessageSubject {
            get {
                return this.messageSubjectField;
            }
            set {
                this.messageSubjectField = value;
            }
        }
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AbuseDate {
            get {
                return this.abuseDateField;
            }
            set {
                this.abuseDateField = value;
            }
        }
        
        /// <remarks/>
        public string ISPName {
            get {
                return this.iSPNameField;
            }
            set {
                this.iSPNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactSubscriptionInfo {
        
        private string contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime additionDateField;
        
        private string additionMethodField;
        
        /// <remarks/>
        public string ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AdditionDate {
            get {
                return this.additionDateField;
            }
            set {
                this.additionDateField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionMethod {
            get {
                return this.additionMethodField;
            }
            set {
                this.additionMethodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSSavedMessage {
        
        private int savedMsgIDField;
        
        private string savedNameField;
        
        private System.DateTime createDateField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int SavedMsgID {
            get {
                return this.savedMsgIDField;
            }
            set {
                this.savedMsgIDField = value;
            }
        }
        
        /// <remarks/>
        public string SavedName {
            get {
                return this.savedNameField;
            }
            set {
                this.savedNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSCharacterSet {
        
        private int characterSetIDField;
        
        private string nameField;
        
        /// <remarks/>
        public int CharacterSetID {
            get {
                return this.characterSetIDField;
            }
            set {
                this.characterSetIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSCampaign {
        
        private int campaignIDField;
        
        private int listIDField;
        
        private string nameField;
        
        private int messageCountField;
        
        /// <remarks/>
        public int CampaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int MessageCount {
            get {
                return this.messageCountField;
            }
            set {
                this.messageCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSProfileFilter {
        
        private int attributeIDField;
        
        private ProfileFitlerCompareTypes profileCompareTypeField;
        
        private string valueField;
        
        private JoinTypes joinTypeField;
        
        /// <remarks/>
        public int AttributeID {
            get {
                return this.attributeIDField;
            }
            set {
                this.attributeIDField = value;
            }
        }
        
        /// <remarks/>
        public ProfileFitlerCompareTypes ProfileCompareType {
            get {
                return this.profileCompareTypeField;
            }
            set {
                this.profileCompareTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public JoinTypes JoinType {
            get {
                return this.joinTypeField;
            }
            set {
                this.joinTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum ProfileFitlerCompareTypes {
        
        /// <remarks/>
        EQUALS,
        
        /// <remarks/>
        NOTEQUALS,
        
        /// <remarks/>
        CONTAINS,
        
        /// <remarks/>
        NOTCONTAINS,
        
        /// <remarks/>
        CHECKED,
        
        /// <remarks/>
        NOTCHECKED,
        
        /// <remarks/>
        RADIOON,
        
        /// <remarks/>
        RADIOOFF,
        
        /// <remarks/>
        ABOVE,
        
        /// <remarks/>
        ABOVEOREQUAL,
        
        /// <remarks/>
        BELOW,
        
        /// <remarks/>
        BELOWOREQUAL,
        
        /// <remarks/>
        INCOMMALIST,
        
        /// <remarks/>
        NOTINCOMMALIST,
        
        /// <remarks/>
        ISEMPTY,
        
        /// <remarks/>
        ISNOTEMPTY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum JoinTypes {
        
        /// <remarks/>
        AND,
        
        /// <remarks/>
        ANDNOT,
        
        /// <remarks/>
        OR,
        
        /// <remarks/>
        ORNOT,
        
        /// <remarks/>
        END,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class SpamAssassinScore {
        
        private double pointsField;
        
        private string ruleField;
        
        private string descriptionField;
        
        /// <remarks/>
        public double Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
        
        /// <remarks/>
        public string Rule {
            get {
                return this.ruleField;
            }
            set {
                this.ruleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSSpamScore {
        
        private double pointsReceivedField;
        
        private double pointsRequiredField;
        
        private SpamAssassinScore[] scoresField;
        
        /// <remarks/>
        public double PointsReceived {
            get {
                return this.pointsReceivedField;
            }
            set {
                this.pointsReceivedField = value;
            }
        }
        
        /// <remarks/>
        public double PointsRequired {
            get {
                return this.pointsRequiredField;
            }
            set {
                this.pointsRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Scores")]
        public SpamAssassinScore[] Scores {
            get {
                return this.scoresField;
            }
            set {
                this.scoresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessage {
        
        private int listIDField;
        
        private int listCampaignIDField;
        
        private string toNameField;
        
        private string replyEmailAddressField;
        
        private string fromNameField;
        
        private string fromEmailAddressField;
        
        private string subjectField;
        
        private bool enablePassalongField;
        
        private bool enableTrackingField;
        
        private string hTMLBodyField;
        
        private string textBodyField;
        
        private int characterSetIDField;
        
        private string googleAnalyticsCampaignNameField;
        
        private string googleAnalyticsCampaignContentField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public int ListCampaignID {
            get {
                return this.listCampaignIDField;
            }
            set {
                this.listCampaignIDField = value;
            }
        }
        
        /// <remarks/>
        public string ToName {
            get {
                return this.toNameField;
            }
            set {
                this.toNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReplyEmailAddress {
            get {
                return this.replyEmailAddressField;
            }
            set {
                this.replyEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string FromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        public string FromEmailAddress {
            get {
                return this.fromEmailAddressField;
            }
            set {
                this.fromEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public bool EnablePassalong {
            get {
                return this.enablePassalongField;
            }
            set {
                this.enablePassalongField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableTracking {
            get {
                return this.enableTrackingField;
            }
            set {
                this.enableTrackingField = value;
            }
        }
        
        /// <remarks/>
        public string HTMLBody {
            get {
                return this.hTMLBodyField;
            }
            set {
                this.hTMLBodyField = value;
            }
        }
        
        /// <remarks/>
        public string TextBody {
            get {
                return this.textBodyField;
            }
            set {
                this.textBodyField = value;
            }
        }
        
        /// <remarks/>
        public int CharacterSetID {
            get {
                return this.characterSetIDField;
            }
            set {
                this.characterSetIDField = value;
            }
        }
        
        /// <remarks/>
        public string GoogleAnalyticsCampaignName {
            get {
                return this.googleAnalyticsCampaignNameField;
            }
            set {
                this.googleAnalyticsCampaignNameField = value;
            }
        }
        
        /// <remarks/>
        public string GoogleAnalyticsCampaignContent {
            get {
                return this.googleAnalyticsCampaignContentField;
            }
            set {
                this.googleAnalyticsCampaignContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSProfileAttributeValue {
        
        private int attributeIDField;
        
        private string valueField;
        
        /// <remarks/>
        public int AttributeID {
            get {
                return this.attributeIDField;
            }
            set {
                this.attributeIDField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContact {
        
        private string emailAddressField;
        
        private int listIDField;
        
        private WSProfileAttributeValue[] contactProfileAttributeField;
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContactProfileAttribute")]
        public WSProfileAttributeValue[] ContactProfileAttribute {
            get {
                return this.contactProfileAttributeField;
            }
            set {
                this.contactProfileAttributeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSProfileAttribute {
        
        private int attributeIDField;
        
        private int headerIDField;
        
        private string nameField;
        
        private DataTypeSettings dataTypeField;
        
        private int maxLengthField;
        
        private int positionField;
        
        /// <remarks/>
        public int AttributeID {
            get {
                return this.attributeIDField;
            }
            set {
                this.attributeIDField = value;
            }
        }
        
        /// <remarks/>
        public int HeaderID {
            get {
                return this.headerIDField;
            }
            set {
                this.headerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public DataTypeSettings DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxLength {
            get {
                return this.maxLengthField;
            }
            set {
                this.maxLengthField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum DataTypeSettings {
        
        /// <remarks/>
        RadioButton,
        
        /// <remarks/>
        CheckBox,
        
        /// <remarks/>
        TextArea,
        
        /// <remarks/>
        Numeric,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        ContentBlock,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSProfileHeader {
        
        private int headerIDField;
        
        private int listIDField;
        
        private string nameField;
        
        private int positionField;
        
        private WSProfileAttribute[] wSProfileAttributesField;
        
        /// <remarks/>
        public int HeaderID {
            get {
                return this.headerIDField;
            }
            set {
                this.headerIDField = value;
            }
        }
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("WSProfileAttributes")]
        public WSProfileAttribute[] WSProfileAttributes {
            get {
                return this.wSProfileAttributesField;
            }
            set {
                this.wSProfileAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSList {
        
        private int listIDField;
        
        private string listNameField;
        
        private System.DateTime createDateField;
        
        private string fromNameField;
        
        private string fromEmailField;
        
        private bool enableRemovalLinkField;
        
        private bool enableBrowserLinkField;
        
        private int bounceHandlingField;
        
        private bool enableDoubleOptinField;
        
        private bool enableListHygieneField;
        
        private WSVmta vmtaField;
        
        private bool showEmailListField;
        
        private bool showAdvancedPersonalizationField;
        
        private int bounceUnsubscribeCountField;
        
        private string domainAliasLinkField;
        
        private string domainAliasEmailField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string ListName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string FromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        public string FromEmail {
            get {
                return this.fromEmailField;
            }
            set {
                this.fromEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableRemovalLink {
            get {
                return this.enableRemovalLinkField;
            }
            set {
                this.enableRemovalLinkField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableBrowserLink {
            get {
                return this.enableBrowserLinkField;
            }
            set {
                this.enableBrowserLinkField = value;
            }
        }
        
        /// <remarks/>
        public int bounceHandling {
            get {
                return this.bounceHandlingField;
            }
            set {
                this.bounceHandlingField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableDoubleOptin {
            get {
                return this.enableDoubleOptinField;
            }
            set {
                this.enableDoubleOptinField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableListHygiene {
            get {
                return this.enableListHygieneField;
            }
            set {
                this.enableListHygieneField = value;
            }
        }
        
        /// <remarks/>
        public WSVmta Vmta {
            get {
                return this.vmtaField;
            }
            set {
                this.vmtaField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowEmailList {
            get {
                return this.showEmailListField;
            }
            set {
                this.showEmailListField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowAdvancedPersonalization {
            get {
                return this.showAdvancedPersonalizationField;
            }
            set {
                this.showAdvancedPersonalizationField = value;
            }
        }
        
        /// <remarks/>
        public int BounceUnsubscribeCount {
            get {
                return this.bounceUnsubscribeCountField;
            }
            set {
                this.bounceUnsubscribeCountField = value;
            }
        }
        
        /// <remarks/>
        public string DomainAliasLink {
            get {
                return this.domainAliasLinkField;
            }
            set {
                this.domainAliasLinkField = value;
            }
        }
        
        /// <remarks/>
        public string DomainAliasEmail {
            get {
                return this.domainAliasEmailField;
            }
            set {
                this.domainAliasEmailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSVmta {
        
        private int vmtaIDField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int VmtaID {
            get {
                return this.vmtaIDField;
            }
            set {
                this.vmtaIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSUpdateContactList {
        
        private int listIDField;
        
        private string listNameField;
        
        private string fromNameField;
        
        private string fromEmailField;
        
        private bool enableRemovalLinkField;
        
        private bool enableBrowserLinkField;
        
        private BounceHandlingSettings bounceHandlingField;
        
        private bool enableDoubleOptinField;
        
        private bool enableListHygieneField;
        
        private int vmtaIDField;
        
        private bool showEmailListField;
        
        private bool showAdvancedPersonalizationField;
        
        private int bounceUnsubscribeCountField;
        
        private string domainAliasLinkField;
        
        private string domainAliasEmailField;
        
        private bool enableRSSField;
        
        private bool enableGoogleAnalyticsField;
        
        private bool enableInternationalizationField;
        
        private bool enableDynamicContentField;
        
        private bool enableListRemoveHeaderField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string ListName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public string FromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        public string FromEmail {
            get {
                return this.fromEmailField;
            }
            set {
                this.fromEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableRemovalLink {
            get {
                return this.enableRemovalLinkField;
            }
            set {
                this.enableRemovalLinkField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableBrowserLink {
            get {
                return this.enableBrowserLinkField;
            }
            set {
                this.enableBrowserLinkField = value;
            }
        }
        
        /// <remarks/>
        public BounceHandlingSettings BounceHandling {
            get {
                return this.bounceHandlingField;
            }
            set {
                this.bounceHandlingField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableDoubleOptin {
            get {
                return this.enableDoubleOptinField;
            }
            set {
                this.enableDoubleOptinField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableListHygiene {
            get {
                return this.enableListHygieneField;
            }
            set {
                this.enableListHygieneField = value;
            }
        }
        
        /// <remarks/>
        public int VmtaID {
            get {
                return this.vmtaIDField;
            }
            set {
                this.vmtaIDField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowEmailList {
            get {
                return this.showEmailListField;
            }
            set {
                this.showEmailListField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowAdvancedPersonalization {
            get {
                return this.showAdvancedPersonalizationField;
            }
            set {
                this.showAdvancedPersonalizationField = value;
            }
        }
        
        /// <remarks/>
        public int BounceUnsubscribeCount {
            get {
                return this.bounceUnsubscribeCountField;
            }
            set {
                this.bounceUnsubscribeCountField = value;
            }
        }
        
        /// <remarks/>
        public string DomainAliasLink {
            get {
                return this.domainAliasLinkField;
            }
            set {
                this.domainAliasLinkField = value;
            }
        }
        
        /// <remarks/>
        public string DomainAliasEmail {
            get {
                return this.domainAliasEmailField;
            }
            set {
                this.domainAliasEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableRSS {
            get {
                return this.enableRSSField;
            }
            set {
                this.enableRSSField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableGoogleAnalytics {
            get {
                return this.enableGoogleAnalyticsField;
            }
            set {
                this.enableGoogleAnalyticsField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableInternationalization {
            get {
                return this.enableInternationalizationField;
            }
            set {
                this.enableInternationalizationField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableDynamicContent {
            get {
                return this.enableDynamicContentField;
            }
            set {
                this.enableDynamicContentField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableListRemoveHeader {
            get {
                return this.enableListRemoveHeaderField;
            }
            set {
                this.enableListRemoveHeaderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum BounceHandlingSettings {
        
        /// <remarks/>
        DoNotHandle,
        
        /// <remarks/>
        StandardHandling,
        
        /// <remarks/>
        AggressiveHandling,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSContactList {
        
        private int listIDField;
        
        private string listNameField;
        
        private System.DateTime createDateField;
        
        private string fromNameField;
        
        private string fromEmailField;
        
        private bool enableRemovalLinkField;
        
        private bool enableBrowserLinkField;
        
        private int bounceHandlingField;
        
        private bool enableDoubleOptinField;
        
        private bool enableListHygieneField;
        
        private WSVmta vmtaField;
        
        private bool showEmailListField;
        
        private bool showAdvancedPersonalizationField;
        
        private int bounceUnsubscribeCountField;
        
        private string domainAliasLinkField;
        
        private string domainAliasEmailField;
        
        private bool enableRSSField;
        
        private bool enableGoogleAnalyticsField;
        
        private string[] googleTrackingDomainsField;
        
        private bool enableInternationalizationField;
        
        private bool enableDynamicContentField;
        
        private bool enableListRemoveHeaderField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string ListName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string FromName {
            get {
                return this.fromNameField;
            }
            set {
                this.fromNameField = value;
            }
        }
        
        /// <remarks/>
        public string FromEmail {
            get {
                return this.fromEmailField;
            }
            set {
                this.fromEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableRemovalLink {
            get {
                return this.enableRemovalLinkField;
            }
            set {
                this.enableRemovalLinkField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableBrowserLink {
            get {
                return this.enableBrowserLinkField;
            }
            set {
                this.enableBrowserLinkField = value;
            }
        }
        
        /// <remarks/>
        public int bounceHandling {
            get {
                return this.bounceHandlingField;
            }
            set {
                this.bounceHandlingField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableDoubleOptin {
            get {
                return this.enableDoubleOptinField;
            }
            set {
                this.enableDoubleOptinField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableListHygiene {
            get {
                return this.enableListHygieneField;
            }
            set {
                this.enableListHygieneField = value;
            }
        }
        
        /// <remarks/>
        public WSVmta Vmta {
            get {
                return this.vmtaField;
            }
            set {
                this.vmtaField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowEmailList {
            get {
                return this.showEmailListField;
            }
            set {
                this.showEmailListField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowAdvancedPersonalization {
            get {
                return this.showAdvancedPersonalizationField;
            }
            set {
                this.showAdvancedPersonalizationField = value;
            }
        }
        
        /// <remarks/>
        public int BounceUnsubscribeCount {
            get {
                return this.bounceUnsubscribeCountField;
            }
            set {
                this.bounceUnsubscribeCountField = value;
            }
        }
        
        /// <remarks/>
        public string DomainAliasLink {
            get {
                return this.domainAliasLinkField;
            }
            set {
                this.domainAliasLinkField = value;
            }
        }
        
        /// <remarks/>
        public string DomainAliasEmail {
            get {
                return this.domainAliasEmailField;
            }
            set {
                this.domainAliasEmailField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableRSS {
            get {
                return this.enableRSSField;
            }
            set {
                this.enableRSSField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableGoogleAnalytics {
            get {
                return this.enableGoogleAnalyticsField;
            }
            set {
                this.enableGoogleAnalyticsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GoogleTrackingDomains")]
        public string[] GoogleTrackingDomains {
            get {
                return this.googleTrackingDomainsField;
            }
            set {
                this.googleTrackingDomainsField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableInternationalization {
            get {
                return this.enableInternationalizationField;
            }
            set {
                this.enableInternationalizationField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableDynamicContent {
            get {
                return this.enableDynamicContentField;
            }
            set {
                this.enableDynamicContentField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableListRemoveHeader {
            get {
                return this.enableListRemoveHeaderField;
            }
            set {
                this.enableListRemoveHeaderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConductorConversation {
        
        private int listIDField;
        
        private int listCampaignIDField;
        
        private int lastPublishedVersionIDField;
        
        private int workingVersionIDField;
        
        private string conversationKeyField;
        
        private string campaignNameField;
        
        private string applicationNameField;
        
        private string notificationFromNameField;
        
        private string notificationFromAddressField;
        
        private ConversationStatus statusField;
        
        private System.Nullable<System.DateTime> expirationDateField;
        
        private int conversationIDField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public int ListCampaignID {
            get {
                return this.listCampaignIDField;
            }
            set {
                this.listCampaignIDField = value;
            }
        }
        
        /// <remarks/>
        public int LastPublishedVersionID {
            get {
                return this.lastPublishedVersionIDField;
            }
            set {
                this.lastPublishedVersionIDField = value;
            }
        }
        
        /// <remarks/>
        public int WorkingVersionID {
            get {
                return this.workingVersionIDField;
            }
            set {
                this.workingVersionIDField = value;
            }
        }
        
        /// <remarks/>
        public string ConversationKey {
            get {
                return this.conversationKeyField;
            }
            set {
                this.conversationKeyField = value;
            }
        }
        
        /// <remarks/>
        public string CampaignName {
            get {
                return this.campaignNameField;
            }
            set {
                this.campaignNameField = value;
            }
        }
        
        /// <remarks/>
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                this.applicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string NotificationFromName {
            get {
                return this.notificationFromNameField;
            }
            set {
                this.notificationFromNameField = value;
            }
        }
        
        /// <remarks/>
        public string NotificationFromAddress {
            get {
                return this.notificationFromAddressField;
            }
            set {
                this.notificationFromAddressField = value;
            }
        }
        
        /// <remarks/>
        public ConversationStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public int ConversationID {
            get {
                return this.conversationIDField;
            }
            set {
                this.conversationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum ConversationStatus {
        
        /// <remarks/>
        Unpublished,
        
        /// <remarks/>
        Publishing,
        
        /// <remarks/>
        PublishPending,
        
        /// <remarks/>
        Published,
        
        /// <remarks/>
        Republishing,
        
        /// <remarks/>
        RepublishPending,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        TerminationPending,
        
        /// <remarks/>
        Terminated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConductorExternalEvent {
        
        private int listIDField;
        
        private int eventIDField;
        
        private string eventNameField;
        
        private ExternalEventStatus statusField;
        
        private int conversationCountField;
        
        private System.Nullable<System.DateTime> lastModifiedDateField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public int EventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public string EventName {
            get {
                return this.eventNameField;
            }
            set {
                this.eventNameField = value;
            }
        }
        
        /// <remarks/>
        public ExternalEventStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int ConversationCount {
            get {
                return this.conversationCountField;
            }
            set {
                this.conversationCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum ExternalEventStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Blocked,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConductorBulkLoadOptions {
        
        private bool suppressEmailNotificationsField;
        
        /// <remarks/>
        public bool SuppressEmailNotifications {
            get {
                return this.suppressEmailNotificationsField;
            }
            set {
                this.suppressEmailNotificationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSTriggerFileMappings {
        
        private int attributeIDField;
        
        private string defaultValueField;
        
        private int fileColumnField;
        
        private bool isEmailAddressColumnField;
        
        private bool isExternalEventColumnField;
        
        /// <remarks/>
        public int AttributeID {
            get {
                return this.attributeIDField;
            }
            set {
                this.attributeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public int FileColumn {
            get {
                return this.fileColumnField;
            }
            set {
                this.fileColumnField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEmailAddressColumn {
            get {
                return this.isEmailAddressColumnField;
            }
            set {
                this.isEmailAddressColumnField = value;
            }
        }
        
        /// <remarks/>
        public bool IsExternalEventColumn {
            get {
                return this.isExternalEventColumnField;
            }
            set {
                this.isExternalEventColumnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSLegacyProcessStatus {
        
        private int statusIDField;
        
        private int listIDField;
        
        private string processTypeField;
        
        private int currentStepField;
        
        private int maxStepField;
        
        private System.DateTime processStartTimeField;
        
        private System.DateTime processCompleteTimeField;
        
        /// <remarks/>
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessType {
            get {
                return this.processTypeField;
            }
            set {
                this.processTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentStep {
            get {
                return this.currentStepField;
            }
            set {
                this.currentStepField = value;
            }
        }
        
        /// <remarks/>
        public int MaxStep {
            get {
                return this.maxStepField;
            }
            set {
                this.maxStepField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ProcessStartTime {
            get {
                return this.processStartTimeField;
            }
            set {
                this.processStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ProcessCompleteTime {
            get {
                return this.processCompleteTimeField;
            }
            set {
                this.processCompleteTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSMessageStatus {
        
        private int msgIDField;
        
        private MessageDeliveryType deliveryTypeField;
        
        private SentFlag messageStatusField;
        
        private int sentCountField;
        
        private System.DateTime startTimeField;
        
        private System.DateTime endTimeField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public MessageDeliveryType DeliveryType {
            get {
                return this.deliveryTypeField;
            }
            set {
                this.deliveryTypeField = value;
            }
        }
        
        /// <remarks/>
        public SentFlag MessageStatus {
            get {
                return this.messageStatusField;
            }
            set {
                this.messageStatusField = value;
            }
        }
        
        /// <remarks/>
        public int SentCount {
            get {
                return this.sentCountField;
            }
            set {
                this.sentCountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum MessageDeliveryType {
        
        /// <remarks/>
        List,
        
        /// <remarks/>
        Test,
        
        /// <remarks/>
        Review,
        
        /// <remarks/>
        Forward,
        
        /// <remarks/>
        Automated,
        
        /// <remarks/>
        SoftBounce,
        
        /// <remarks/>
        Triggered,
        
        /// <remarks/>
        Preview,
        
        /// <remarks/>
        Browser,
        
        /// <remarks/>
        SWYN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum SentFlag {
        
        /// <remarks/>
        ToBeSent,
        
        /// <remarks/>
        Sending,
        
        /// <remarks/>
        Sent,
        
        /// <remarks/>
        RecurringSend,
        
        /// <remarks/>
        NotReady,
        
        /// <remarks/>
        ErrorSetToRetry,
        
        /// <remarks/>
        PendingApproval,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSProcessStatus {
        
        private int processIDField;
        
        private int listIDField;
        
        private string processNameField;
        
        private System.DateTime processStartTimeField;
        
        private System.DateTime processCompleteTimeField;
        
        private StatusEnum statusField;
        
        /// <remarks/>
        public int ProcessID {
            get {
                return this.processIDField;
            }
            set {
                this.processIDField = value;
            }
        }
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessName {
            get {
                return this.processNameField;
            }
            set {
                this.processNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ProcessStartTime {
            get {
                return this.processStartTimeField;
            }
            set {
                this.processStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ProcessCompleteTime {
            get {
                return this.processCompleteTimeField;
            }
            set {
                this.processCompleteTimeField = value;
            }
        }
        
        /// <remarks/>
        public StatusEnum Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum StatusEnum {
        
        /// <remarks/>
        DataActivelyUploading,
        
        /// <remarks/>
        DataUploaded,
        
        /// <remarks/>
        DataReadyForProcessing,
        
        /// <remarks/>
        ProcessingData,
        
        /// <remarks/>
        ProcessingCompleted,
        
        /// <remarks/>
        ProcessingFailed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSUpdateSubcribedContactAttributeOptions {
        
        private bool suppressEmailNotificationsField;
        
        /// <remarks/>
        public bool SuppressEmailNotifications {
            get {
                return this.suppressEmailNotificationsField;
            }
            set {
                this.suppressEmailNotificationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSBulkLoadOptions {
        
        private bool suppressEmailNotificationsField;
        
        /// <remarks/>
        public bool SuppressEmailNotifications {
            get {
                return this.suppressEmailNotificationsField;
            }
            set {
                this.suppressEmailNotificationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSFileMappings {
        
        private int attributeIDField;
        
        private string defaultValueField;
        
        private int fileColumnField;
        
        private bool isEmailAddressColumnField;
        
        /// <remarks/>
        public int AttributeID {
            get {
                return this.attributeIDField;
            }
            set {
                this.attributeIDField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public int FileColumn {
            get {
                return this.fileColumnField;
            }
            set {
                this.fileColumnField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEmailAddressColumn {
            get {
                return this.isEmailAddressColumnField;
            }
            set {
                this.isEmailAddressColumnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSImportDirectives {
        
        private ImportTypeEnum importTypeEnumField;
        
        private ImportProfileTypeEnum importProfileTypeEnumField;
        
        private string fileNameField;
        
        private bool hasColumnNamesField;
        
        private string fileDelimiterField;
        
        private string textQualifierField;
        
        /// <remarks/>
        public ImportTypeEnum ImportTypeEnum {
            get {
                return this.importTypeEnumField;
            }
            set {
                this.importTypeEnumField = value;
            }
        }
        
        /// <remarks/>
        public ImportProfileTypeEnum ImportProfileTypeEnum {
            get {
                return this.importProfileTypeEnumField;
            }
            set {
                this.importProfileTypeEnumField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public bool HasColumnNames {
            get {
                return this.hasColumnNamesField;
            }
            set {
                this.hasColumnNamesField = value;
            }
        }
        
        /// <remarks/>
        public string FileDelimiter {
            get {
                return this.fileDelimiterField;
            }
            set {
                this.fileDelimiterField = value;
            }
        }
        
        /// <remarks/>
        public string TextQualifier {
            get {
                return this.textQualifierField;
            }
            set {
                this.textQualifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum ImportTypeEnum {
        
        /// <remarks/>
        AddSubscribers,
        
        /// <remarks/>
        AddSubscribersAndProfileData,
        
        /// <remarks/>
        RemoveSubscribers,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum ImportProfileTypeEnum {
        
        /// <remarks/>
        NotDefined,
        
        /// <remarks/>
        Update,
        
        /// <remarks/>
        Append,
        
        /// <remarks/>
        Overwrite,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationLocationContactClick {
        
        private int msgIDField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private string postalCodeField;
        
        private System.DateTime clickDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ClickDate {
            get {
                return this.clickDateField;
            }
            set {
                this.clickDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationLocationContactRead {
        
        private int msgIDField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private string postalCodeField;
        
        private System.DateTime readDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReadDate {
            get {
                return this.readDateField;
            }
            set {
                this.readDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationLocationContactOpen {
        
        private int msgIDField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private string countryNameField;
        
        private string regionNameField;
        
        private string postalCodeField;
        
        private System.DateTime openDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OpenDate {
            get {
                return this.openDateField;
            }
            set {
                this.openDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationContactBounce {
        
        private int msgIDField;
        
        private string subjectField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime bounceDateField;
        
        private int bounceCountField;
        
        private string bounceReasonField;
        
        private string bounceDetailField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BounceDate {
            get {
                return this.bounceDateField;
            }
            set {
                this.bounceDateField = value;
            }
        }
        
        /// <remarks/>
        public int BounceCount {
            get {
                return this.bounceCountField;
            }
            set {
                this.bounceCountField = value;
            }
        }
        
        /// <remarks/>
        public string BounceReason {
            get {
                return this.bounceReasonField;
            }
            set {
                this.bounceReasonField = value;
            }
        }
        
        /// <remarks/>
        public string BounceDetail {
            get {
                return this.bounceDetailField;
            }
            set {
                this.bounceDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationLinkClick {
        
        private int msgIDField;
        
        private string subjectField;
        
        private int linkIDField;
        
        private string linkDescriptionField;
        
        private string linkURLField;
        
        private string typeField;
        
        private int clickCountField;
        
        private decimal clickPercentField;
        
        private int clickerCountField;
        
        private int sendCountField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int LinkID {
            get {
                return this.linkIDField;
            }
            set {
                this.linkIDField = value;
            }
        }
        
        /// <remarks/>
        public string LinkDescription {
            get {
                return this.linkDescriptionField;
            }
            set {
                this.linkDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string LinkURL {
            get {
                return this.linkURLField;
            }
            set {
                this.linkURLField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int ClickCount {
            get {
                return this.clickCountField;
            }
            set {
                this.clickCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal ClickPercent {
            get {
                return this.clickPercentField;
            }
            set {
                this.clickPercentField = value;
            }
        }
        
        /// <remarks/>
        public int ClickerCount {
            get {
                return this.clickerCountField;
            }
            set {
                this.clickerCountField = value;
            }
        }
        
        /// <remarks/>
        public int SendCount {
            get {
                return this.sendCountField;
            }
            set {
                this.sendCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationContactRead {
        
        private int msgIDField;
        
        private string subjectField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime readDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReadDate {
            get {
                return this.readDateField;
            }
            set {
                this.readDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationContactOpen {
        
        private int msgIDField;
        
        private string subjectField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime openDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OpenDate {
            get {
                return this.openDateField;
            }
            set {
                this.openDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationContactRemoval {
        
        private int msgIDField;
        
        private string subjectField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime addDateField;
        
        private System.DateTime removeDateField;
        
        private string removeMethodField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AddDate {
            get {
                return this.addDateField;
            }
            set {
                this.addDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RemoveDate {
            get {
                return this.removeDateField;
            }
            set {
                this.removeDateField = value;
            }
        }
        
        /// <remarks/>
        public string RemoveMethod {
            get {
                return this.removeMethodField;
            }
            set {
                this.removeMethodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationContactDelivery {
        
        private int msgIDField;
        
        private string subjectField;
        
        private int contactIDField;
        
        private string emailAddressField;
        
        private System.DateTime sendDateField;
        
        /// <remarks/>
        public int MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationDelivery {
        
        private int listIDField;
        
        private int campaignIDField;
        
        private string campaignNameField;
        
        private int conversationIDField;
        
        private string conversationNameField;
        
        private System.DateTime publishedDateField;
        
        private int sendCountField;
        
        private int deliverCountField;
        
        private decimal deliverRateField;
        
        private int bounceCountField;
        
        private decimal bounceRateField;
        
        private int passAlongCountField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public int CampaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        public string CampaignName {
            get {
                return this.campaignNameField;
            }
            set {
                this.campaignNameField = value;
            }
        }
        
        /// <remarks/>
        public int ConversationID {
            get {
                return this.conversationIDField;
            }
            set {
                this.conversationIDField = value;
            }
        }
        
        /// <remarks/>
        public string ConversationName {
            get {
                return this.conversationNameField;
            }
            set {
                this.conversationNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PublishedDate {
            get {
                return this.publishedDateField;
            }
            set {
                this.publishedDateField = value;
            }
        }
        
        /// <remarks/>
        public int SendCount {
            get {
                return this.sendCountField;
            }
            set {
                this.sendCountField = value;
            }
        }
        
        /// <remarks/>
        public int DeliverCount {
            get {
                return this.deliverCountField;
            }
            set {
                this.deliverCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal DeliverRate {
            get {
                return this.deliverRateField;
            }
            set {
                this.deliverRateField = value;
            }
        }
        
        /// <remarks/>
        public int BounceCount {
            get {
                return this.bounceCountField;
            }
            set {
                this.bounceCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal BounceRate {
            get {
                return this.bounceRateField;
            }
            set {
                this.bounceRateField = value;
            }
        }
        
        /// <remarks/>
        public int PassAlongCount {
            get {
                return this.passAlongCountField;
            }
            set {
                this.passAlongCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSConversationActivity {
        
        private int listIDField;
        
        private int campaignIDField;
        
        private string campaignNameField;
        
        private int conversationIDField;
        
        private string conversationNameField;
        
        private System.DateTime publishedDateField;
        
        private int contactCountField;
        
        private int waitingCountField;
        
        private int terminatedCountField;
        
        private int deliverCountField;
        
        private int removeCountField;
        
        private decimal removeRateField;
        
        private int openCountField;
        
        private decimal openRateField;
        
        private int readCountField;
        
        private decimal readRateField;
        
        private int clickCountField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public int CampaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        public string CampaignName {
            get {
                return this.campaignNameField;
            }
            set {
                this.campaignNameField = value;
            }
        }
        
        /// <remarks/>
        public int ConversationID {
            get {
                return this.conversationIDField;
            }
            set {
                this.conversationIDField = value;
            }
        }
        
        /// <remarks/>
        public string ConversationName {
            get {
                return this.conversationNameField;
            }
            set {
                this.conversationNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PublishedDate {
            get {
                return this.publishedDateField;
            }
            set {
                this.publishedDateField = value;
            }
        }
        
        /// <remarks/>
        public int ContactCount {
            get {
                return this.contactCountField;
            }
            set {
                this.contactCountField = value;
            }
        }
        
        /// <remarks/>
        public int WaitingCount {
            get {
                return this.waitingCountField;
            }
            set {
                this.waitingCountField = value;
            }
        }
        
        /// <remarks/>
        public int TerminatedCount {
            get {
                return this.terminatedCountField;
            }
            set {
                this.terminatedCountField = value;
            }
        }
        
        /// <remarks/>
        public int DeliverCount {
            get {
                return this.deliverCountField;
            }
            set {
                this.deliverCountField = value;
            }
        }
        
        /// <remarks/>
        public int RemoveCount {
            get {
                return this.removeCountField;
            }
            set {
                this.removeCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal RemoveRate {
            get {
                return this.removeRateField;
            }
            set {
                this.removeRateField = value;
            }
        }
        
        /// <remarks/>
        public int OpenCount {
            get {
                return this.openCountField;
            }
            set {
                this.openCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal OpenRate {
            get {
                return this.openRateField;
            }
            set {
                this.openRateField = value;
            }
        }
        
        /// <remarks/>
        public int ReadCount {
            get {
                return this.readCountField;
            }
            set {
                this.readCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal ReadRate {
            get {
                return this.readRateField;
            }
            set {
                this.readRateField = value;
            }
        }
        
        /// <remarks/>
        public int ClickCount {
            get {
                return this.clickCountField;
            }
            set {
                this.clickCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public partial class WSException {
        
        private string soapMethodField;
        
        private System.Nullable<System.DateTime> dateTimeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string SoapMethod {
            get {
                return this.soapMethodField;
            }
            set {
                this.soapMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum WSObjectTypeEnum {
        
        /// <remarks/>
        Message,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum SubscribeContactResult {
        
        /// <remarks/>
        SuccessContactSubscribed,
        
        /// <remarks/>
        FailedContactBanned,
        
        /// <remarks/>
        FailedContactSuppressed,
        
        /// <remarks/>
        FailedContactAlreadySubscribed,
        
        /// <remarks/>
        FailedContactUnSubscribed,
        
        /// <remarks/>
        FailedContactPendingConfirmation,
        
        /// <remarks/>
        FailedContactRequiresConfirmation,
        
        /// <remarks/>
        FailedContactInvalidEmailAddress,
        
        /// <remarks/>
        ContactAlreadySubscribedProfileUpdated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum ChangeContactEmailResult {
        
        /// <remarks/>
        SuccessContactEmailAddressChanged,
        
        /// <remarks/>
        FailedNewEmailAddressIsBanned,
        
        /// <remarks/>
        FailedNewEmailAddressIsSuppressed,
        
        /// <remarks/>
        FailedNewEmailAddressIsAlreadySubscribed,
        
        /// <remarks/>
        FailedNewEmailAddressIsUnSubscribed,
        
        /// <remarks/>
        FailedNewEmailAddressIsPendingConfirmation,
        
        /// <remarks/>
        FailedContactEmailAddressNotFound,
        
        /// <remarks/>
        FailedIdenticalEmailAddress,
        
        /// <remarks/>
        FailedInvalidNewEmailAddress,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum UnsubscribeContactResult {
        
        /// <remarks/>
        SuccessContactUnSubscribed,
        
        /// <remarks/>
        ContactNotSubscribed,
        
        /// <remarks/>
        ContactAlreadyUnSubscribed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservices.listrak.com/v31/")]
    public enum WSImportResultEnum {
        
        /// <remarks/>
        Invalid,
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Subscribed,
        
        /// <remarks/>
        UnSubscribed,
        
        /// <remarks/>
        AlreadySubscribed,
        
        /// <remarks/>
        AlreadyUnSubscribed,
        
        /// <remarks/>
        Suppressed,
        
        /// <remarks/>
        Banned,
        
        /// <remarks/>
        Skipped,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportListConversationActivityCompletedEventHandler(object sender, ReportListConversationActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportListConversationActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportListConversationActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationActivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationActivity[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportListConversationDeliveryCompletedEventHandler(object sender, ReportListConversationDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportListConversationDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportListConversationDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationDelivery[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationDelivery[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationContactDeliveryCompletedEventHandler(object sender, ReportConversationContactDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationContactDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationContactDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationContactDelivery[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationContactDelivery[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationContactRemovalCompletedEventHandler(object sender, ReportConversationContactRemovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationContactRemovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationContactRemovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationContactRemoval[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationContactRemoval[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationContactOpenCompletedEventHandler(object sender, ReportConversationContactOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationContactOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationContactOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationContactOpen[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationContactOpen[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationContactReadCompletedEventHandler(object sender, ReportConversationContactReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationContactReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationContactReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationContactRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationContactRead[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationLinkClickCompletedEventHandler(object sender, ReportConversationLinkClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationLinkClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationLinkClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationLinkClick[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationLinkClick[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationContactBounceCompletedEventHandler(object sender, ReportConversationContactBounceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationContactBounceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationContactBounceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationContactBounce[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationContactBounce[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationLocationContactOpenCompletedEventHandler(object sender, ReportConversationLocationContactOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationLocationContactOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationLocationContactOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationLocationContactOpen[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationLocationContactOpen[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationLocationContactReadCompletedEventHandler(object sender, ReportConversationLocationContactReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationLocationContactReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationLocationContactReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationLocationContactRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationLocationContactRead[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportConversationLocationContactClickCompletedEventHandler(object sender, ReportConversationLocationContactClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportConversationLocationContactClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportConversationLocationContactClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConversationLocationContactClick[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConversationLocationContactClick[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSystemIDFromPublicIDCompletedEventHandler(object sender, GetSystemIDFromPublicIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemIDFromPublicIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemIDFromPublicIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BulkLoadContactsCompletedEventHandler(object sender, BulkLoadContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BulkLoadContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BulkLoadContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BulkLoadContactsWithOptionsCompletedEventHandler(object sender, BulkLoadContactsWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BulkLoadContactsWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BulkLoadContactsWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateSubscribedContactAttributeCompletedEventHandler(object sender, UpdateSubscribedContactAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSubscribedContactAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSubscribedContactAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateSubscribedContactAttributeWithOptionsCompletedEventHandler(object sender, UpdateSubscribedContactAttributeWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSubscribedContactAttributeWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSubscribedContactAttributeWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcessStatusCompletedEventHandler(object sender, GetProcessStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSProcessStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSProcessStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMessageStatusCompletedEventHandler(object sender, GetMessageStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLegacyProcessStatusCompletedEventHandler(object sender, GetLegacyProcessStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLegacyProcessStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLegacyProcessStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSLegacyProcessStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSLegacyProcessStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConductorBulkLoadAndTriggerContactsCompletedEventHandler(object sender, ConductorBulkLoadAndTriggerContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConductorBulkLoadAndTriggerContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConductorBulkLoadAndTriggerContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConductorBulkLoadAndTriggerContactsWithOptionsCompletedEventHandler(object sender, ConductorBulkLoadAndTriggerContactsWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConductorBulkLoadAndTriggerContactsWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConductorBulkLoadAndTriggerContactsWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConductorGetExternalEventsCompletedEventHandler(object sender, ConductorGetExternalEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConductorGetExternalEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConductorGetExternalEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConductorExternalEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConductorExternalEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConductorGetConversationsCompletedEventHandler(object sender, ConductorGetConversationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConductorGetConversationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConductorGetConversationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSConductorConversation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSConductorConversation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAccountVmtaCollectionCompletedEventHandler(object sender, GetAccountVmtaCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountVmtaCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountVmtaCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSVmta[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSVmta[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContactListCompletedEventHandler(object sender, GetContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContactListCollectionCompletedEventHandler(object sender, GetContactListCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactListCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactListCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateContactListCompletedEventHandler(object sender, CreateContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateContactListCompletedEventHandler(object sender, UpdateContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSUpdateContactList WSUpdateContactList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSUpdateContactList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateListCompletedEventHandler(object sender, CreateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSList WSList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSList)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddGoogleTrackingDomainsToListCompletedEventHandler(object sender, AddGoogleTrackingDomainsToListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGoogleTrackingDomainsToListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGoogleTrackingDomainsToListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteGoogleTrackingDomainsFromListCompletedEventHandler(object sender, DeleteGoogleTrackingDomainsFromListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGoogleTrackingDomainsFromListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGoogleTrackingDomainsFromListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteContactListCompletedEventHandler(object sender, DeleteContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProfileHeaderCollectionCompletedEventHandler(object sender, GetProfileHeaderCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProfileHeaderCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProfileHeaderCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSProfileHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSProfileHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateProfileHeaderCompletedEventHandler(object sender, CreateProfileHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProfileHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProfileHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSProfileHeader WSProfileHeader {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSProfileHeader)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateProfileHeaderCompletedEventHandler(object sender, UpdateProfileHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProfileHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProfileHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSProfileHeader WSProfileHeader {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSProfileHeader)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteProfileHeaderCompletedEventHandler(object sender, DeleteProfileHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfileHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfileHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateProfileAttributeCompletedEventHandler(object sender, CreateProfileAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProfileAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProfileAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSProfileAttribute WSProfileAttribute {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSProfileAttribute)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateProfileAttributeCompletedEventHandler(object sender, UpdateProfileAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProfileAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProfileAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSProfileAttribute WSProfileAttribute {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSProfileAttribute)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteProfileAttributeCompletedEventHandler(object sender, DeleteProfileAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfileAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfileAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContactCompletedEventHandler(object sender, GetContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetContactCompletedEventHandler(object sender, SetContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscribeContactResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscribeContactResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangeContactEmailAddressCompletedEventHandler(object sender, ChangeContactEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeContactEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeContactEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangeContactEmailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangeContactEmailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubscribeContactCompletedEventHandler(object sender, SubscribeContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscribeContactResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscribeContactResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnsubscribeContactCompletedEventHandler(object sender, UnsubscribeContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnsubscribeContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnsubscribeContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnsubscribeContactResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnsubscribeContactResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSpamScoreCompletedEventHandler(object sender, GetSpamScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpamScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpamScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSSpamScore Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSSpamScore)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ScheduleSendListMessageCompletedEventHandler(object sender, ScheduleSendListMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScheduleSendListMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScheduleSendListMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDateTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ScheduleSendListMessageWithProfileFilterCompletedEventHandler(object sender, ScheduleSendListMessageWithProfileFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScheduleSendListMessageWithProfileFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScheduleSendListMessageWithProfileFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDateTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendListMessageCompletedEventHandler(object sender, SendListMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendListMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendListMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendListMessageWithProfileFilterCompletedEventHandler(object sender, SendListMessageWithProfileFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendListMessageWithProfileFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendListMessageWithProfileFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendListMessageTestCompletedEventHandler(object sender, SendListMessageTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendListMessageTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendListMessageTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendListMessageReviewCompletedEventHandler(object sender, SendListMessageReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendListMessageReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendListMessageReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCampaignCollectionCompletedEventHandler(object sender, GetCampaignCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSCampaign[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSCampaign[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCharacterSetCollectionCompletedEventHandler(object sender, GetCharacterSetCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCharacterSetCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCharacterSetCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSCharacterSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSCharacterSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendSavedMessageCompletedEventHandler(object sender, SendSavedMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSavedMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSavedMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendSavedMessageTestCompletedEventHandler(object sender, SendSavedMessageTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSavedMessageTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSavedMessageTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSavedMessageCollectionCompletedEventHandler(object sender, GetSavedMessageCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSavedMessageCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSavedMessageCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSSavedMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSSavedMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFilteredListCountCompletedEventHandler(object sender, GetFilteredListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilteredListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilteredListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportSubscribedContactsCompletedEventHandler(object sender, ReportSubscribedContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportSubscribedContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportSubscribedContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactSubscriptionInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactSubscriptionInfo[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeSubscribedContactsCompletedEventHandler(object sender, ReportRangeSubscribedContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeSubscribedContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeSubscribedContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactSubscriptionInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactSubscriptionInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportAdminContactFeedbackLoopCompletedEventHandler(object sender, ReportAdminContactFeedbackLoopCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportAdminContactFeedbackLoopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportAdminContactFeedbackLoopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSFeedbackLoopListing[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSFeedbackLoopListing[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageContactOpenCompletedEventHandler(object sender, ReportMessageContactOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageContactOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageContactOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactOpen[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactOpen[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeMessageContactOpenCompletedEventHandler(object sender, ReportRangeMessageContactOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeMessageContactOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeMessageContactOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactOpen[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactOpen[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageContactReadCompletedEventHandler(object sender, ReportMessageContactReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageContactReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageContactReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactRead[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeMessageContactReadCompletedEventHandler(object sender, ReportRangeMessageContactReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeMessageContactReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeMessageContactReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactRead[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageContactClickCompletedEventHandler(object sender, ReportMessageContactClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageContactClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageContactClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactClick[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactClick[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeMessageContactClickCompletedEventHandler(object sender, ReportRangeMessageContactClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeMessageContactClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeMessageContactClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactClick[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactClick[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageContactPassalongCompletedEventHandler(object sender, ReportMessageContactPassalongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageContactPassalongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageContactPassalongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactPassalong[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactPassalong[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeMessageContactPassalongCompletedEventHandler(object sender, ReportRangeMessageContactPassalongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeMessageContactPassalongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeMessageContactPassalongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactPassalong[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactPassalong[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageContactBouncesCompletedEventHandler(object sender, ReportMessageContactBouncesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageContactBouncesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageContactBouncesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactBounce[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactBounce[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeMessageContactBouncesCompletedEventHandler(object sender, ReportRangeMessageContactBouncesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeMessageContactBouncesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeMessageContactBouncesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactBounce[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactBounce[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportListMessageActivityCompletedEventHandler(object sender, ReportListMessageActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportListMessageActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportListMessageActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageActivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageActivity[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportListMessageDeliveryCompletedEventHandler(object sender, ReportListMessageDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportListMessageDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportListMessageDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageDelivery[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageDelivery[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportListContactRemovalCompletedEventHandler(object sender, ReportListContactRemovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportListContactRemovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportListContactRemovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactRemovalInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactRemovalInfo[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeListContactRemovalCompletedEventHandler(object sender, ReportRangeListContactRemovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeListContactRemovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeListContactRemovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactRemovalInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactRemovalInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportListContactHygieneCompletedEventHandler(object sender, ReportListContactHygieneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportListContactHygieneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportListContactHygieneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactHygieneInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactHygieneInfo[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeListContactHygieneCompletedEventHandler(object sender, ReportRangeListContactHygieneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeListContactHygieneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeListContactHygieneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactHygieneInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactHygieneInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageLinkClickCompletedEventHandler(object sender, ReportMessageLinkClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageLinkClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageLinkClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageLink[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageLink[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportContactLinkClickCompletedEventHandler(object sender, ReportContactLinkClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportContactLinkClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportContactLinkClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactLinkClick[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactLinkClick[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageLocationClickCompletedEventHandler(object sender, ReportMessageLocationClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageLocationClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageLocationClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageLocationClick[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageLocationClick[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageLocationOpenCompletedEventHandler(object sender, ReportMessageLocationOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageLocationOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageLocationOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageLocationOpen[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageLocationOpen[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageLocationReadCompletedEventHandler(object sender, ReportMessageLocationReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageLocationReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageLocationReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageLocationRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageLocationRead[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageLocationContactClickCompletedEventHandler(object sender, ReportMessageLocationContactClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageLocationContactClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageLocationContactClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageLocationContactClick[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageLocationContactClick[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageLocationContactOpenCompletedEventHandler(object sender, ReportMessageLocationContactOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageLocationContactOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageLocationContactOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageLocationContactOpen[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageLocationContactOpen[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageLocationContactReadCompletedEventHandler(object sender, ReportMessageLocationContactReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageLocationContactReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageLocationContactReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageLocationContactRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageLocationContactRead[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageContactActivityCompletedEventHandler(object sender, ReportMessageContactActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageContactActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageContactActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSMessageContactActivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSMessageContactActivity[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportRangeMessageContactRemovalCompletedEventHandler(object sender, ReportRangeMessageContactRemovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportRangeMessageContactRemovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportRangeMessageContactRemovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactRemovalInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactRemovalInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportMessageContactRemovalCompletedEventHandler(object sender, ReportMessageContactRemovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportMessageContactRemovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportMessageContactRemovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactRemovalInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactRemovalInfo[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportContactMessageActivityCompletedEventHandler(object sender, ReportContactMessageActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportContactMessageActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportContactMessageActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSContactMessageActivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSContactMessageActivity[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportListImportHistoryCompletedEventHandler(object sender, ReportListImportHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportListImportHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportListImportHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSImportHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSImportHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReportImportContactDetailCompletedEventHandler(object sender, ReportImportContactDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportImportContactDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportImportContactDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WSImportContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSImportContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public WSException WSException {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WSException)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591